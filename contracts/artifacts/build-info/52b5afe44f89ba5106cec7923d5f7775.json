{
	"id": "52b5afe44f89ba5106cec7923d5f7775",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ONFA.sol": {
				"content": "pragma solidity 0.5.16;\n\ninterface IORC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor () internal { }\n\n  function _msgSender() internal view returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, \"SafeMath: subtraction overflow\");\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, \"SafeMath: division by zero\");\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, \"SafeMath: modulo by zero\");\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor () internal {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n\ncontract ONFA is Context, IORC20, Ownable {\n  using SafeMath for uint256;\n\n  mapping (address => uint256) private _balances;\n\n  mapping (address => mapping (address => uint256)) private _allowances;\n\n  uint256 private _totalSupply;\n  uint8 public _decimals;\n  string public _symbol;\n  string public _name;\n\n  constructor() public {\n    _name = \"ONFA\";\n    _symbol = \"OFT\";\n    _decimals = 18;\n    _totalSupply = 200000000 *10**18;\n    _balances[msg.sender] = _totalSupply;\n\n    emit Transfer(address(0), msg.sender, _totalSupply);\n  }\n\n  /**\n   * @dev Returns the token owner.\n   */\n  function getOwner() external view returns (address) {\n    return owner();\n  }\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev See {ORC20-totalSupply}.\n   */\n  function totalSupply() external view returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {ORC20-balanceOf}.\n   */\n  function balanceOf(address account) external view returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {ORC20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool) {\n    _transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {ORC20-allowance}.\n   */\n  function allowance(address owner, address spender) external view returns (uint256) {\n    return _allowances[owner][spender];\n  }\n\n  /**\n   * @dev See {ORC20-approve}.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function approve(address spender, uint256 amount) external returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {ORC20-transferFrom}.\n   *\n   * Emits an {Approval} event indicating the updated allowance. This is not\n   * required by the EIP. See the note at the beginning of {ORC20};\n   *\n   * Requirements:\n   * - `sender` and `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   * - the caller must have allowance for `sender`'s tokens of at least\n   * `amount`.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\n    _transfer(sender, recipient, amount);\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ORC20: transfer amount exceeds allowance\"));\n    return true;\n  }\n\n  /**\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {ORC20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n    return true;\n  }\n\n  /**\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {ORC20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   * - `spender` must have allowance for the caller of at least\n   * `subtractedValue`.\n   */\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ORC20: decreased allowance below zero\"));\n    return true;\n  }\n\n  /**\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n   * the total supply.\n   *\n   * Requirements\n   *\n   * - `msg.sender` must be the token owner\n   */\n   /*function mint(uint256 amount) public onlyOwner returns (bool) {\n    _mint(_msgSender(), amount);\n    return true;\n  }\n    */\n  /**\n   * @dev Burn `amount` tokens and decreasing the total supply.\n   */\n  function burn(uint256 amount) public returns (bool) {\n    _burn(_msgSender(), amount);\n    return true;\n  }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal {\n    require(sender != address(0), \"ORC20: transfer from the zero address\");\n    require(recipient != address(0), \"ORC20: transfer to the zero address\");\n\n    _balances[sender] = _balances[sender].sub(amount, \"ORC20: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n   * the total supply.\n   *\n   * Emits a {Transfer} event with `from` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `to` cannot be the zero address.\n   */\n   /*\n  function _mint(address account, uint256 amount) internal {\n    require(account != address(0), \"ORC20: mint to the zero address\");\n\n    _totalSupply = _totalSupply.add(amount);\n    _balances[account] = _balances[account].add(amount);\n    emit Transfer(address(0), account, amount);\n  }\n    */\n  /**\n   * @dev Destroys `amount` tokens from `account`, reducing the\n   * total supply.\n   *\n   * Emits a {Transfer} event with `to` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `account` cannot be the zero address.\n   * - `account` must have at least `amount` tokens.\n   */\n  function _burn(address account, uint256 amount) internal {\n    require(account != address(0), \"ORC20: burn from the zero address\");\n\n    _balances[account] = _balances[account].sub(amount, \"ORC20: burn amount exceeds balance\");\n    _totalSupply = _totalSupply.sub(amount);\n    emit Transfer(account, address(0), amount);\n  }\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   *\n   * This is internal function is equivalent to `approve`, and can be used to\n   * e.g. set automatic allowances for certain subsystems, etc.\n   *\n   * Emits an {Approval} event.\n   *\n   * Requirements:\n   *\n   * - `owner` cannot be the zero address.\n   * - `spender` cannot be the zero address.\n   */\n  function _approve(address owner, address spender, uint256 amount) internal {\n    require(owner != address(0), \"ORC20: approve from the zero address\");\n    require(spender != address(0), \"ORC20: approve to the zero address\");\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n   * from the caller's allowance.\n   *\n   * See {_burn} and {_approve}.\n   */\n  function _burnFrom(address account, uint256 amount) internal {\n    _burn(account, amount);\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"ORC20: burn amount exceeds allowance\"));\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "homestead"
		}
	},
	"output": {
		"contracts": {
			"contracts/ONFA.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ONFA.sol\":\"Context\"},\"evmVersion\":\"homestead\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ONFA.sol\":{\"keccak256\":\"0x6c1499ad1b3cc0af237fe15641893e5559bd2a807d8e791e5a99dd67d3507e4e\",\"urls\":[\"bzz-raw://6d517cf36d2870b22a0e9d81b7030ee574e4606175609c50fdf61a4b182b6b6d\",\"dweb:/ipfs/QmZ5S7os9V8p9A5cENnb2WxGdRii8p2QKM2AzpZP3vKyRo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IORC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ONFA.sol\":\"IORC20\"},\"evmVersion\":\"homestead\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ONFA.sol\":{\"keccak256\":\"0x6c1499ad1b3cc0af237fe15641893e5559bd2a807d8e791e5a99dd67d3507e4e\",\"urls\":[\"bzz-raw://6d517cf36d2870b22a0e9d81b7030ee574e4606175609c50fdf61a4b182b6b6d\",\"dweb:/ipfs/QmZ5S7os9V8p9A5cENnb2WxGdRii8p2QKM2AzpZP3vKyRo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"ONFA": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {ORC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {ORC20-approve}.   * Requirements:   * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {ORC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {ORC20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {ORC20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {ORC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {ORC20-transfer}.   * Requirements:   * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {ORC20-transferFrom}.   * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ORC20};   * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/ONFA.sol\":10968:18716  contract ONFA is Context, IORC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ONFA.sol\":11277:11502  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"contracts/ONFA.sol\":9527:9544  address msgSender */\n  0x00\n    /* \"contracts/ONFA.sol\":9547:9559  _msgSender() */\n  tag_7\n    /* \"contracts/ONFA.sol\":9547:9557  _msgSender */\n  0x0100000000\n  tag_8\n  dup2\n  mul\n    /* \"contracts/ONFA.sol\":9547:9559  _msgSender() */\n  div\n  jump\t// in\ntag_7:\n    /* \"contracts/ONFA.sol\":9565:9571  _owner */\n  0x00\n    /* \"contracts/ONFA.sol\":9565:9583  _owner = msgSender */\n  dup1\n  sload\n  not(sub(exp(0x02, 0xa0), 0x01))\n  and\n  sub(exp(0x02, 0xa0), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/ONFA.sol\":9594:9637  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/ONFA.sol\":9565:9583  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/ONFA.sol\":9594:9637  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/ONFA.sol\":9565:9571  _owner */\n  dup3\n  swap1\n    /* \"contracts/ONFA.sol\":9594:9637  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"contracts/ONFA.sol\":11304:11318  _name = \"ONFA\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x04\n  dup1\n  dup3\n  mstore\n  0x4f4e464100000000000000000000000000000000000000000000000000000000\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_10\n  swap2\n    /* \"contracts/ONFA.sol\":11304:11309  _name */\n  0x06\n  swap2\n    /* \"contracts/ONFA.sol\":11304:11318  _name = \"ONFA\" */\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/ONFA.sol\":11324:11339  _symbol = \"OFT\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x03\n  dup1\n  dup3\n  mstore\n  0x4f46540000000000000000000000000000000000000000000000000000000000\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_12\n  swap2\n    /* \"contracts/ONFA.sol\":11324:11331  _symbol */\n  0x05\n  swap2\n    /* \"contracts/ONFA.sol\":11324:11339  _symbol = \"OFT\" */\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/ONFA.sol\":11345:11354  _decimals */\n  0x04\n    /* \"contracts/ONFA.sol\":11345:11359  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/ONFA.sol\":11357:11359  18 */\n  0x12\n    /* \"contracts/ONFA.sol\":11345:11359  _decimals = 18 */\n  or\n  swap1\n  sstore\n    /* \"contracts/ONFA.sol\":11380:11397  200000000 *10**18 */\n  0xa56fa5b99019a5c8000000\n    /* \"contracts/ONFA.sol\":11365:11377  _totalSupply */\n  0x03\n    /* \"contracts/ONFA.sol\":11365:11397  _totalSupply = 200000000 *10**18 */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/ONFA.sol\":11413:11423  msg.sender */\n  caller\n    /* \"contracts/ONFA.sol\":11345:11354  _decimals */\n  0x00\n    /* \"contracts/ONFA.sol\":11403:11424  _balances[msg.sender] */\n  dup2\n  dup2\n  mstore\n    /* \"contracts/ONFA.sol\":11345:11359  _decimals = 18 */\n  0x01\n    /* \"contracts/ONFA.sol\":11403:11424  _balances[msg.sender] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/ONFA.sol\":11403:11439  _balances[msg.sender] = _totalSupply */\n  dup6\n  swap1\n  sstore\n    /* \"contracts/ONFA.sol\":11451:11497  Transfer(address(0), msg.sender, _totalSupply) */\n  dup1\n  mload\n  swap5\n  dup6\n  mstore\n  mload\n    /* \"contracts/ONFA.sol\":11413:11423  msg.sender */\n  swap3\n  swap4\n    /* \"contracts/ONFA.sol\":11345:11354  _decimals */\n  swap2\n  swap3\n    /* \"contracts/ONFA.sol\":11451:11497  Transfer(address(0), msg.sender, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap3\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log3\n    /* \"contracts/ONFA.sol\":10968:18716  contract ONFA is Context, IORC20, Ownable {... */\n  jump(tag_13)\n    /* \"contracts/ONFA.sol\":3595:3685  function _msgSender() internal view returns (address payable) {... */\ntag_8:\n    /* \"contracts/ONFA.sol\":3670:3680  msg.sender */\n  caller\n    /* \"contracts/ONFA.sol\":3595:3685  function _msgSender() internal view returns (address payable) {... */\ntag_14:\n  swap1\n  jump\t// out\n    /* \"contracts/ONFA.sol\":10968:18716  contract ONFA is Context, IORC20, Ownable {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_14\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_22)\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ONFA.sol\":10968:18716  contract ONFA is Context, IORC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/ONFA.sol\":10968:18716  contract ONFA is Context, IORC20, Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      calldataload(0x00)\n      0x0100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      dup1\n      0x715018a6\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb09f1266\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd28d8852\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x313ce567\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x32424aa3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ONFA.sol\":11942:12019  function name() external view returns (string memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_27:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_27)\n    tag_29:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ONFA.sol\":11942:12019  function name() external view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_30\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_30:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ONFA.sol\":12937:13078  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_4:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n      pop\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":12937:13078  function approve(address spender, uint256 amount) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_33\n      jump\t// in\n    tag_31:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/ONFA.sol\":12070:12155  function totalSupply() external view returns (uint256) {... */\n    tag_5:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/ONFA.sol\":13509:13797  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_37:\n      pop\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":13509:13797  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_38\n      jump\t// in\n        /* \"contracts/ONFA.sol\":11684:11761  function decimals() external view returns (uint8) {... */\n    tag_7:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/ONFA.sol\":11202:11224  uint8 public _decimals */\n    tag_8:\n      tag_39\n      tag_42\n      jump\t// in\n        /* \"contracts/ONFA.sol\":14165:14362  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_9:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n      pop\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":14165:14362  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_45\n      jump\t// in\n        /* \"contracts/ONFA.sol\":15462:15569  function burn(uint256 amount) public returns (bool) {... */\n    tag_10:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n      pop\n        /* \"contracts/ONFA.sol\":15462:15569  function burn(uint256 amount) public returns (bool) {... */\n      calldataload\n      tag_48\n      jump\t// in\n        /* \"contracts/ONFA.sol\":12204:12308  function balanceOf(address account) external view returns (uint256) {... */\n    tag_11:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_50:\n      pop\n        /* \"contracts/ONFA.sol\":12204:12308  function balanceOf(address account) external view returns (uint256) {... */\n      calldataload\n      sub(exp(0x02, 0xa0), 0x01)\n      and\n      tag_51\n      jump\t// in\n        /* \"contracts/ONFA.sol\":10293:10420  function renounceOwnership() public onlyOwner {... */\n    tag_12:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/ONFA.sol\":11553:11630  function getOwner() external view returns (address) {... */\n    tag_13:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      0x40\n      dup1\n      mload\n      sub(exp(0x02, 0xa0), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/ONFA.sol\":9710:9781  function owner() public view returns (address) {... */\n    tag_14:\n      tag_54\n      tag_57\n      jump\t// in\n        /* \"contracts/ONFA.sol\":11813:11894  function symbol() external view returns (string memory) {... */\n    tag_15:\n      tag_25\n      tag_59\n      jump\t// in\n        /* \"contracts/ONFA.sol\":14818:15066  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_16:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_65:\n      pop\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":14818:15066  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_66\n      jump\t// in\n        /* \"contracts/ONFA.sol\":12492:12639  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_17:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_68:\n      pop\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":12492:12639  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_69\n      jump\t// in\n        /* \"contracts/ONFA.sol\":11228:11249  string public _symbol */\n    tag_18:\n      tag_25\n      tag_71\n      jump\t// in\n        /* \"contracts/ONFA.sol\":11253:11272  string public _name */\n    tag_19:\n      tag_25\n      tag_77\n      jump\t// in\n        /* \"contracts/ONFA.sol\":12688:12816  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_20:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_83\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_83:\n      pop\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":12688:12816  function allowance(address owner, address spender) external view returns (uint256) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_84\n      jump\t// in\n        /* \"contracts/ONFA.sol\":10559:10660  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_21:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_86\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_86:\n      pop\n        /* \"contracts/ONFA.sol\":10559:10660  function transferOwnership(address newOwner) public onlyOwner {... */\n      calldataload\n      sub(exp(0x02, 0xa0), 0x01)\n      and\n      tag_87\n      jump\t// in\n        /* \"contracts/ONFA.sol\":11942:12019  function name() external view returns (string memory) {... */\n    tag_26:\n        /* \"contracts/ONFA.sol\":12009:12014  _name */\n      0x06\n        /* \"contracts/ONFA.sol\":12002:12014  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ONFA.sol\":11981:11994  string memory */\n      0x60\n      swap4\n        /* \"contracts/ONFA.sol\":12002:12014  return _name */\n      swap1\n      swap3\n        /* \"contracts/ONFA.sol\":12009:12014  _name */\n      swap1\n      swap2\n        /* \"contracts/ONFA.sol\":12002:12014  return _name */\n      dup4\n      add\n        /* \"contracts/ONFA.sol\":12009:12014  _name */\n      dup3\n        /* \"contracts/ONFA.sol\":12002:12014  return _name */\n      dup3\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ONFA.sol\":11942:12019  function name() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ONFA.sol\":12937:13078  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_33:\n        /* \"contracts/ONFA.sol\":13005:13009  bool */\n      0x00\n        /* \"contracts/ONFA.sol\":13017:13056  _approve(_msgSender(), spender, amount) */\n      tag_93\n        /* \"contracts/ONFA.sol\":13026:13038  _msgSender() */\n      tag_94\n        /* \"contracts/ONFA.sol\":13026:13036  _msgSender */\n      tag_95\n        /* \"contracts/ONFA.sol\":13026:13038  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"contracts/ONFA.sol\":13040:13047  spender */\n      dup5\n        /* \"contracts/ONFA.sol\":13049:13055  amount */\n      dup5\n        /* \"contracts/ONFA.sol\":13017:13025  _approve */\n      tag_96\n        /* \"contracts/ONFA.sol\":13017:13056  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_93:\n      pop\n        /* \"contracts/ONFA.sol\":13069:13073  true */\n      0x01\n        /* \"contracts/ONFA.sol\":12937:13078  function approve(address spender, uint256 amount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ONFA.sol\":12070:12155  function totalSupply() external view returns (uint256) {... */\n    tag_35:\n        /* \"contracts/ONFA.sol\":12138:12150  _totalSupply */\n      sload(0x03)\n        /* \"contracts/ONFA.sol\":12070:12155  function totalSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ONFA.sol\":13509:13797  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_38:\n        /* \"contracts/ONFA.sol\":13600:13604  bool */\n      0x00\n        /* \"contracts/ONFA.sol\":13612:13648  _transfer(sender, recipient, amount) */\n      tag_99\n        /* \"contracts/ONFA.sol\":13622:13628  sender */\n      dup5\n        /* \"contracts/ONFA.sol\":13630:13639  recipient */\n      dup5\n        /* \"contracts/ONFA.sol\":13641:13647  amount */\n      dup5\n        /* \"contracts/ONFA.sol\":13612:13621  _transfer */\n      tag_100\n        /* \"contracts/ONFA.sol\":13612:13648  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/ONFA.sol\":13654:13775  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ORC20: transfer amount exceeds allowance\")) */\n      tag_101\n        /* \"contracts/ONFA.sol\":13663:13669  sender */\n      dup5\n        /* \"contracts/ONFA.sol\":13671:13683  _msgSender() */\n      tag_102\n        /* \"contracts/ONFA.sol\":13671:13681  _msgSender */\n      tag_95\n        /* \"contracts/ONFA.sol\":13671:13683  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/ONFA.sol\":13685:13774  _allowances[sender][_msgSender()].sub(amount, \"ORC20: transfer amount exceeds allowance\") */\n      tag_103\n        /* \"contracts/ONFA.sol\":13723:13729  amount */\n      dup6\n        /* \"contracts/ONFA.sol\":13685:13774  _allowances[sender][_msgSender()].sub(amount, \"ORC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_3d234848b1165c1d44ee096354d96b78ee9aa8ef9f4dd8fb59ed7216dbda102f\n      0x28\n      swap2\n      codecopy\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":13685:13704  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ONFA.sol\":13685:13696  _allowances */\n      0x02\n        /* \"contracts/ONFA.sol\":13685:13704  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/ONFA.sol\":13705:13717  _msgSender() */\n      tag_104\n        /* \"contracts/ONFA.sol\":13705:13715  _msgSender */\n      tag_95\n        /* \"contracts/ONFA.sol\":13705:13717  _msgSender() */\n      jump\t// in\n    tag_104:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":13685:13718  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"contracts/ONFA.sol\":13685:13774  _allowances[sender][_msgSender()].sub(amount, \"ORC20: transfer amount exceeds allowance\") */\n      swap1\n      0xffffffff\n        /* \"contracts/ONFA.sol\":13685:13722  _allowances[sender][_msgSender()].sub */\n      tag_105\n        /* \"contracts/ONFA.sol\":13685:13774  _allowances[sender][_msgSender()].sub(amount, \"ORC20: transfer amount exceeds allowance\") */\n      and\n      jump\t// in\n    tag_103:\n        /* \"contracts/ONFA.sol\":13654:13662  _approve */\n      tag_96\n        /* \"contracts/ONFA.sol\":13654:13775  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ORC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_101:\n      pop\n        /* \"contracts/ONFA.sol\":13788:13792  true */\n      0x01\n        /* \"contracts/ONFA.sol\":13509:13797  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ONFA.sol\":11684:11761  function decimals() external view returns (uint8) {... */\n    tag_40:\n        /* \"contracts/ONFA.sol\":11747:11756  _decimals */\n      and(0xff, sload(0x04))\n        /* \"contracts/ONFA.sol\":11684:11761  function decimals() external view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ONFA.sol\":11202:11224  uint8 public _decimals */\n    tag_42:\n      and(0xff, sload(0x04))\n      dup2\n      jump\t// out\n        /* \"contracts/ONFA.sol\":14165:14362  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_45:\n        /* \"contracts/ONFA.sol\":14245:14249  bool */\n      0x00\n        /* \"contracts/ONFA.sol\":14257:14340  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_93\n        /* \"contracts/ONFA.sol\":14266:14278  _msgSender() */\n      tag_109\n        /* \"contracts/ONFA.sol\":14266:14276  _msgSender */\n      tag_95\n        /* \"contracts/ONFA.sol\":14266:14278  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/ONFA.sol\":14280:14287  spender */\n      dup5\n        /* \"contracts/ONFA.sol\":14289:14339  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_103\n        /* \"contracts/ONFA.sol\":14328:14338  addedValue */\n      dup6\n        /* \"contracts/ONFA.sol\":14289:14300  _allowances */\n      0x02\n        /* \"contracts/ONFA.sol\":14289:14314  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/ONFA.sol\":14301:14313  _msgSender() */\n      tag_111\n        /* \"contracts/ONFA.sol\":14301:14311  _msgSender */\n      tag_95\n        /* \"contracts/ONFA.sol\":14301:14313  _msgSender() */\n      jump\t// in\n    tag_111:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":14289:14314  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/ONFA.sol\":14289:14323  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/ONFA.sol\":14289:14339  _allowances[_msgSender()][spender].add(addedValue) */\n      0xffffffff\n        /* \"contracts/ONFA.sol\":14289:14327  _allowances[_msgSender()][spender].add */\n      tag_112\n        /* \"contracts/ONFA.sol\":14289:14339  _allowances[_msgSender()][spender].add(addedValue) */\n      and\n      jump\t// in\n        /* \"contracts/ONFA.sol\":15462:15569  function burn(uint256 amount) public returns (bool) {... */\n    tag_48:\n        /* \"contracts/ONFA.sol\":15508:15512  bool */\n      0x00\n        /* \"contracts/ONFA.sol\":15520:15547  _burn(_msgSender(), amount) */\n      tag_114\n        /* \"contracts/ONFA.sol\":15526:15538  _msgSender() */\n      tag_115\n        /* \"contracts/ONFA.sol\":15526:15536  _msgSender */\n      tag_95\n        /* \"contracts/ONFA.sol\":15526:15538  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"contracts/ONFA.sol\":15540:15546  amount */\n      dup4\n        /* \"contracts/ONFA.sol\":15520:15525  _burn */\n      tag_116\n        /* \"contracts/ONFA.sol\":15520:15547  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_114:\n      pop\n        /* \"contracts/ONFA.sol\":15560:15564  true */\n      0x01\n        /* \"contracts/ONFA.sol\":15462:15569  function burn(uint256 amount) public returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ONFA.sol\":12204:12308  function balanceOf(address account) external view returns (uint256) {... */\n    tag_51:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":12285:12303  _balances[account] */\n      and\n        /* \"contracts/ONFA.sol\":12263:12270  uint256 */\n      0x00\n        /* \"contracts/ONFA.sol\":12285:12303  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ONFA.sol\":12285:12294  _balances */\n      0x01\n        /* \"contracts/ONFA.sol\":12285:12303  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/ONFA.sol\":12204:12308  function balanceOf(address account) external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/ONFA.sol\":10293:10420  function renounceOwnership() public onlyOwner {... */\n    tag_53:\n        /* \"contracts/ONFA.sol\":9906:9918  _msgSender() */\n      tag_119\n        /* \"contracts/ONFA.sol\":9906:9916  _msgSender */\n      tag_95\n        /* \"contracts/ONFA.sol\":9906:9918  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/ONFA.sol\":9896:9902  _owner */\n      sload(0x00)\n      sub(exp(0x02, 0xa0), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/ONFA.sol\":9896:9918  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/ONFA.sol\":9888:9955  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_120\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_120:\n        /* \"contracts/ONFA.sol\":10387:10388  0 */\n      0x00\n        /* \"contracts/ONFA.sol\":10371:10377  _owner */\n      dup1\n      sload\n        /* \"contracts/ONFA.sol\":10350:10390  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":10371:10377  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/ONFA.sol\":10350:10390  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/ONFA.sol\":10387:10388  0 */\n      dup4\n      swap1\n        /* \"contracts/ONFA.sol\":10350:10390  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/ONFA.sol\":10413:10414  0 */\n      0x00\n        /* \"contracts/ONFA.sol\":10396:10415  _owner = address(0) */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      sstore\n        /* \"contracts/ONFA.sol\":10293:10420  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ONFA.sol\":11553:11630  function getOwner() external view returns (address) {... */\n    tag_55:\n        /* \"contracts/ONFA.sol\":11596:11603  address */\n      0x00\n        /* \"contracts/ONFA.sol\":11618:11625  owner() */\n      tag_123\n        /* \"contracts/ONFA.sol\":11618:11623  owner */\n      tag_57\n        /* \"contracts/ONFA.sol\":11618:11625  owner() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/ONFA.sol\":11611:11625  return owner() */\n      swap1\n      pop\n        /* \"contracts/ONFA.sol\":11553:11630  function getOwner() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ONFA.sol\":9710:9781  function owner() public view returns (address) {... */\n    tag_57:\n        /* \"contracts/ONFA.sol\":9748:9755  address */\n      0x00\n        /* \"contracts/ONFA.sol\":9770:9776  _owner */\n      sload\n      sub(exp(0x02, 0xa0), 0x01)\n      and\n        /* \"contracts/ONFA.sol\":9710:9781  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ONFA.sol\":11813:11894  function symbol() external view returns (string memory) {... */\n    tag_59:\n        /* \"contracts/ONFA.sol\":11882:11889  _symbol */\n      0x05\n        /* \"contracts/ONFA.sol\":11875:11889  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ONFA.sol\":11854:11867  string memory */\n      0x60\n      swap4\n        /* \"contracts/ONFA.sol\":11875:11889  return _symbol */\n      swap1\n      swap3\n        /* \"contracts/ONFA.sol\":11882:11889  _symbol */\n      swap1\n      swap2\n        /* \"contracts/ONFA.sol\":11875:11889  return _symbol */\n      dup4\n      add\n        /* \"contracts/ONFA.sol\":11882:11889  _symbol */\n      dup3\n        /* \"contracts/ONFA.sol\":11875:11889  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n        /* \"contracts/ONFA.sol\":14818:15066  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_66:\n        /* \"contracts/ONFA.sol\":14903:14907  bool */\n      0x00\n        /* \"contracts/ONFA.sol\":14915:15044  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ORC20: decreased allowance below zero\")) */\n      tag_93\n        /* \"contracts/ONFA.sol\":14924:14936  _msgSender() */\n      tag_131\n        /* \"contracts/ONFA.sol\":14924:14934  _msgSender */\n      tag_95\n        /* \"contracts/ONFA.sol\":14924:14936  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"contracts/ONFA.sol\":14938:14945  spender */\n      dup5\n        /* \"contracts/ONFA.sol\":14947:15043  _allowances[_msgSender()][spender].sub(subtractedValue, \"ORC20: decreased allowance below zero\") */\n      tag_103\n        /* \"contracts/ONFA.sol\":14986:15001  subtractedValue */\n      dup6\n        /* \"contracts/ONFA.sol\":14947:15043  _allowances[_msgSender()][spender].sub(subtractedValue, \"ORC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_87d6db954c608985f03f8b1fef85ed6dcb004f13fa99eb0d65cfd43383c12a83\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/ONFA.sol\":14947:14958  _allowances */\n      0x02\n        /* \"contracts/ONFA.sol\":14947:14972  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/ONFA.sol\":14959:14971  _msgSender() */\n      tag_133\n        /* \"contracts/ONFA.sol\":14959:14969  _msgSender */\n      tag_95\n        /* \"contracts/ONFA.sol\":14959:14971  _msgSender() */\n      jump\t// in\n    tag_133:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":14947:14972  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/ONFA.sol\":14947:14981  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/ONFA.sol\":14947:15043  _allowances[_msgSender()][spender].sub(subtractedValue, \"ORC20: decreased allowance below zero\") */\n      swap1\n      0xffffffff\n        /* \"contracts/ONFA.sol\":14947:14985  _allowances[_msgSender()][spender].sub */\n      tag_105\n        /* \"contracts/ONFA.sol\":14947:15043  _allowances[_msgSender()][spender].sub(subtractedValue, \"ORC20: decreased allowance below zero\") */\n      and\n      jump\t// in\n        /* \"contracts/ONFA.sol\":12492:12639  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_69:\n        /* \"contracts/ONFA.sol\":12563:12567  bool */\n      0x00\n        /* \"contracts/ONFA.sol\":12575:12617  _transfer(_msgSender(), recipient, amount) */\n      tag_93\n        /* \"contracts/ONFA.sol\":12585:12597  _msgSender() */\n      tag_136\n        /* \"contracts/ONFA.sol\":12585:12595  _msgSender */\n      tag_95\n        /* \"contracts/ONFA.sol\":12585:12597  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"contracts/ONFA.sol\":12599:12608  recipient */\n      dup5\n        /* \"contracts/ONFA.sol\":12610:12616  amount */\n      dup5\n        /* \"contracts/ONFA.sol\":12575:12584  _transfer */\n      tag_100\n        /* \"contracts/ONFA.sol\":12575:12617  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/ONFA.sol\":11228:11249  string public _symbol */\n    tag_71:\n      0x05\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x02\n      0x01\n      dup6\n      and\n      iszero\n      0x0100\n      mul\n      not(0x00)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_137\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_138\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_137)\n    tag_138:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_139:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_139\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ONFA.sol\":11253:11272  string public _name */\n    tag_77:\n      0x06\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x02\n      0x01\n      dup6\n      and\n      iszero\n      0x0100\n      mul\n      not(0x00)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_137\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_138\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_137)\n        /* \"contracts/ONFA.sol\":12688:12816  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_84:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":12784:12802  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/ONFA.sol\":12762:12769  uint256 */\n      0x00\n        /* \"contracts/ONFA.sol\":12784:12802  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ONFA.sol\":12784:12795  _allowances */\n      0x02\n        /* \"contracts/ONFA.sol\":12784:12802  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ONFA.sol\":12784:12811  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/ONFA.sol\":12688:12816  function allowance(address owner, address spender) external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/ONFA.sol\":10559:10660  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_87:\n        /* \"contracts/ONFA.sol\":9906:9918  _msgSender() */\n      tag_145\n        /* \"contracts/ONFA.sol\":9906:9916  _msgSender */\n      tag_95\n        /* \"contracts/ONFA.sol\":9906:9918  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"contracts/ONFA.sol\":9896:9902  _owner */\n      sload(0x00)\n      sub(exp(0x02, 0xa0), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/ONFA.sol\":9896:9918  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/ONFA.sol\":9888:9955  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_146\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/ONFA.sol\":10627:10655  _transferOwnership(newOwner) */\n      tag_148\n        /* \"contracts/ONFA.sol\":10646:10654  newOwner */\n      dup2\n        /* \"contracts/ONFA.sol\":10627:10645  _transferOwnership */\n      tag_149\n        /* \"contracts/ONFA.sol\":10627:10655  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/ONFA.sol\":10559:10660  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ONFA.sol\":3595:3685  function _msgSender() internal view returns (address payable) {... */\n    tag_95:\n        /* \"contracts/ONFA.sol\":3670:3680  msg.sender */\n      caller\n        /* \"contracts/ONFA.sol\":3595:3685  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ONFA.sol\":18017:18331  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_96:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":18106:18125  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/ONFA.sol\":18098:18166  require(owner != address(0), \"ORC20: approve from the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a3b32387119999786b1ec9d1f53a7e79560c2e33f750b8a96c8e2d14ecb77f91\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":18180:18201  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/ONFA.sol\":18172:18240  require(spender != address(0), \"ORC20: approve to the zero address\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b394f3b0695aa74f0153a7d294ced7383d6f167777ff906a2b400f4783ae435c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":18247:18265  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ONFA.sol\":18247:18258  _allowances */\n      0x02\n        /* \"contracts/ONFA.sol\":18247:18265  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ONFA.sol\":18247:18274  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ONFA.sol\":18247:18283  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/ONFA.sol\":18294:18326  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/ONFA.sol\":18017:18331  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ONFA.sol\":16013:16455  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_100:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":16106:16126  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/ONFA.sol\":16098:16168  require(sender != address(0), \"ORC20: transfer from the zero address\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_bcfde3765840cb5eef6a25d234002120ae0868902ac4a3023b23315ef6e74553\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":16182:16205  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/ONFA.sol\":16174:16245  require(recipient != address(0), \"ORC20: transfer to the zero address\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_64ea97ae7457d513c64ccdc791d74b8e0dbe043ffc2a1bdba9184138ac3b5ad4\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"contracts/ONFA.sol\":16272:16343  _balances[sender].sub(amount, \"ORC20: transfer amount exceeds balance\") */\n      tag_157\n        /* \"contracts/ONFA.sol\":16294:16300  amount */\n      dup2\n        /* \"contracts/ONFA.sol\":16272:16343  _balances[sender].sub(amount, \"ORC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_8b3b2f7361ca6ccaa55146d6345d4981f11bfa0015185087bfcf610e5bc8489a\n      0x26\n      swap2\n      codecopy\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":16272:16289  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ONFA.sol\":16272:16281  _balances */\n      0x01\n        /* \"contracts/ONFA.sol\":16272:16289  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/ONFA.sol\":16272:16343  _balances[sender].sub(amount, \"ORC20: transfer amount exceeds balance\") */\n      swap1\n      0xffffffff\n        /* \"contracts/ONFA.sol\":16272:16293  _balances[sender].sub */\n      tag_105\n        /* \"contracts/ONFA.sol\":16272:16343  _balances[sender].sub(amount, \"ORC20: transfer amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_157:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":16252:16269  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ONFA.sol\":16252:16261  _balances */\n      0x01\n        /* \"contracts/ONFA.sol\":16252:16269  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ONFA.sol\":16252:16343  _balances[sender] = _balances[sender].sub(amount, \"ORC20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/ONFA.sol\":16372:16392  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/ONFA.sol\":16372:16404  _balances[recipient].add(amount) */\n      tag_158\n      swap1\n        /* \"contracts/ONFA.sol\":16397:16403  amount */\n      dup3\n        /* \"contracts/ONFA.sol\":16372:16404  _balances[recipient].add(amount) */\n      0xffffffff\n        /* \"contracts/ONFA.sol\":16372:16396  _balances[recipient].add */\n      tag_112\n        /* \"contracts/ONFA.sol\":16372:16404  _balances[recipient].add(amount) */\n      and\n      jump\t// in\n    tag_158:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":16349:16369  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ONFA.sol\":16349:16358  _balances */\n      0x01\n        /* \"contracts/ONFA.sol\":16349:16369  _balances[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ONFA.sol\":16349:16404  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/ONFA.sol\":16415:16450  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/ONFA.sol\":16349:16369  _balances[recipient] */\n      swap2\n      swap4\n        /* \"contracts/ONFA.sol\":16415:16450  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"contracts/ONFA.sol\":16013:16455  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ONFA.sol\":5492:5665  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_105:\n        /* \"contracts/ONFA.sol\":5578:5585  uint256 */\n      0x00\n        /* \"contracts/ONFA.sol\":5609:5621  errorMessage */\n      dup2\n        /* \"contracts/ONFA.sol\":5601:5607  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/ONFA.sol\":5593:5622  require(b <= a, errorMessage) */\n      tag_160\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_161:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_163\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_161)\n    tag_163:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ONFA.sol\":5593:5622  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_164\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_164:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n      pop\n      pop\n      pop\n        /* \"contracts/ONFA.sol\":5640:5645  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/ONFA.sol\":5492:5665  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/ONFA.sol\":4694:4856  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_112:\n        /* \"contracts/ONFA.sol\":4752:4759  uint256 */\n      0x00\n        /* \"contracts/ONFA.sol\":4779:4784  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/ONFA.sol\":4798:4804  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/ONFA.sol\":4790:4836  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_166\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_166:\n        /* \"contracts/ONFA.sol\":4850:4851  c */\n      swap4\n        /* \"contracts/ONFA.sol\":4694:4856  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ONFA.sol\":17296:17620  function _burn(address account, uint256 amount) internal {... */\n    tag_116:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":17367:17388  account != address(0) */\n      dup3\n      and\n        /* \"contracts/ONFA.sol\":17359:17426  require(account != address(0), \"ORC20: burn from the zero address\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f70d9d9c27d4d18165be1f03a1f1a5d7bb474afa8cbe6af412b168937e2f3a84\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"contracts/ONFA.sol\":17454:17522  _balances[account].sub(amount, \"ORC20: burn amount exceeds balance\") */\n      tag_169\n        /* \"contracts/ONFA.sol\":17477:17483  amount */\n      dup2\n        /* \"contracts/ONFA.sol\":17454:17522  _balances[account].sub(amount, \"ORC20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_da8c24ca01df06fe437c579662b59c535302eaae2b6940a10883325abbcd45ca\n      0x22\n      swap2\n      codecopy\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":17454:17472  _balances[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ONFA.sol\":17454:17463  _balances */\n      0x01\n        /* \"contracts/ONFA.sol\":17454:17472  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/ONFA.sol\":17454:17522  _balances[account].sub(amount, \"ORC20: burn amount exceeds balance\") */\n      swap1\n      0xffffffff\n        /* \"contracts/ONFA.sol\":17454:17476  _balances[account].sub */\n      tag_105\n        /* \"contracts/ONFA.sol\":17454:17522  _balances[account].sub(amount, \"ORC20: burn amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_169:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":17433:17451  _balances[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ONFA.sol\":17433:17442  _balances */\n      0x01\n        /* \"contracts/ONFA.sol\":17433:17451  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ONFA.sol\":17433:17522  _balances[account] = _balances[account].sub(amount, \"ORC20: burn amount exceeds balance\") */\n      sstore\n        /* \"contracts/ONFA.sol\":17543:17555  _totalSupply */\n      sload(0x03)\n        /* \"contracts/ONFA.sol\":17543:17567  _totalSupply.sub(amount) */\n      tag_170\n      swap1\n        /* \"contracts/ONFA.sol\":17560:17566  amount */\n      dup3\n        /* \"contracts/ONFA.sol\":17543:17567  _totalSupply.sub(amount) */\n      0xffffffff\n        /* \"contracts/ONFA.sol\":17543:17559  _totalSupply.sub */\n      tag_171\n        /* \"contracts/ONFA.sol\":17543:17567  _totalSupply.sub(amount) */\n      and\n      jump\t// in\n    tag_170:\n        /* \"contracts/ONFA.sol\":17528:17540  _totalSupply */\n      0x03\n        /* \"contracts/ONFA.sol\":17528:17567  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"contracts/ONFA.sol\":17578:17615  Transfer(account, address(0), amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/ONFA.sol\":17604:17605  0 */\n      0x00\n      swap2\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":17578:17615  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"contracts/ONFA.sol\":17296:17620  function _burn(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ONFA.sol\":10753:10964  function _transferOwnership(address newOwner) internal {... */\n    tag_149:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/ONFA.sol\":10822:10844  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/ONFA.sol\":10814:10887  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"contracts/ONFA.sol\":10919:10925  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/ONFA.sol\":10898:10936  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(exp(0x02, 0xa0), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/ONFA.sol\":10919:10925  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/ONFA.sol\":10898:10936  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/ONFA.sol\":10942:10948  _owner */\n      0x00\n        /* \"contracts/ONFA.sol\":10942:10959  _owner = newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(exp(0x02, 0xa0), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ONFA.sol\":10753:10964  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n        /* \"contracts/ONFA.sol\":5100:5228  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_171:\n        /* \"contracts/ONFA.sol\":5158:5165  uint256 */\n      0x00\n        /* \"contracts/ONFA.sol\":5180:5223  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_166\n        /* \"contracts/ONFA.sol\":5184:5185  a */\n      dup4\n        /* \"contracts/ONFA.sol\":5187:5188  b */\n      dup4\n        /* \"contracts/ONFA.sol\":5180:5223  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/ONFA.sol\":5180:5183  sub */\n      tag_105\n        /* \"contracts/ONFA.sol\":5180:5223  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_3d234848b1165c1d44ee096354d96b78ee9aa8ef9f4dd8fb59ed7216dbda102f 4f524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_64ea97ae7457d513c64ccdc791d74b8e0dbe043ffc2a1bdba9184138ac3b5ad4 4f524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_87d6db954c608985f03f8b1fef85ed6dcb004f13fa99eb0d65cfd43383c12a83 4f524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_8b3b2f7361ca6ccaa55146d6345d4981f11bfa0015185087bfcf610e5bc8489a 4f524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_a3b32387119999786b1ec9d1f53a7e79560c2e33f750b8a96c8e2d14ecb77f91 4f524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_b394f3b0695aa74f0153a7d294ced7383d6f167777ff906a2b400f4783ae435c 4f524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_bcfde3765840cb5eef6a25d234002120ae0868902ac4a3023b23315ef6e74553 4f524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_da8c24ca01df06fe437c579662b59c535302eaae2b6940a10883325abbcd45ca 4f524332303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_f70d9d9c27d4d18165be1f03a1f1a5d7bb474afa8cbe6af412b168937e2f3a84 4f524332303a206275726e2066726f6d20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a7231582066ae2027e3a004c35691c80364cf7bde503e6590e21b8a46ae415d143738574a64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000276401000000006200016c810204565b60008054600160a060020a031916600160a060020a0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506040805180820190915260048082527f4f4e4641000000000000000000000000000000000000000000000000000000006020909201918252620000b79160069162000171565b506040805180820190915260038082527f4f465400000000000000000000000000000000000000000000000000000000006020909201918252620000fe9160059162000171565b506004805460ff191660121790556aa56fa5b99019a5c80000006003819055336000818152600160209081526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a362000213565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001b457805160ff1916838001178555620001e4565b82800160010185558215620001e4579182015b82811115620001e4578251825591602001919060010190620001c7565b50620001f2929150620001f6565b5090565b6200016e91905b80821115620001f25760008155600101620001fd565b610ffb80620002236000396000f3fe608060405234801561001057600080fd5b506004361061013e576000357c010000000000000000000000000000000000000000000000000000000090048063715018a6116100ca578063a9059cbb1161008e578063a9059cbb1461034f578063b09f12661461037b578063d28d885214610383578063dd62ed3e1461038b578063f2fde38b146103b95761013e565b8063715018a6146102e5578063893d20e8146102ef5780638da5cb5b1461031357806395d89b411461031b578063a457c2d7146103235761013e565b8063313ce56711610111578063313ce5671461025057806332424aa31461026e578063395093511461027657806342966c68146102a257806370a08231146102bf5761013e565b806306fdde0314610143578063095ea7b3146101c057806318160ddd1461020057806323b872dd1461021a575b600080fd5b61014b6103df565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018557818101518382015260200161016d565b50505050905090810190601f1680156101b25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ec600480360360408110156101d657600080fd5b50600160a060020a038135169060200135610475565b604080519115158252519081900360200190f35b610208610492565b60408051918252519081900360200190f35b6101ec6004803603606081101561023057600080fd5b50600160a060020a03813581169160208101359091169060400135610498565b610258610525565b6040805160ff9092168252519081900360200190f35b61025861052e565b6101ec6004803603604081101561028c57600080fd5b50600160a060020a038135169060200135610537565b6101ec600480360360208110156102b857600080fd5b503561058b565b610208600480360360208110156102d557600080fd5b5035600160a060020a03166105a6565b6102ed6105c1565b005b6102f7610685565b60408051600160a060020a039092168252519081900360200190f35b6102f7610694565b61014b6106a3565b6101ec6004803603604081101561033957600080fd5b50600160a060020a038135169060200135610704565b6101ec6004803603604081101561036557600080fd5b50600160a060020a038135169060200135610772565b61014b610786565b61014b610814565b610208600480360360408110156103a157600080fd5b50600160a060020a038135811691602001351661086f565b6102ed600480360360208110156103cf57600080fd5b5035600160a060020a031661089a565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561046b5780601f106104405761010080835404028352916020019161046b565b820191906000526020600020905b81548152906001019060200180831161044e57829003601f168201915b5050505050905090565b6000610489610482610913565b8484610917565b50600192915050565b60035490565b60006104a5848484610a09565b61051b846104b1610913565b61051685604051806060016040528060288152602001610e8360289139600160a060020a038a166000908152600260205260408120906104ef610913565b600160a060020a03168152602081019190915260400160002054919063ffffffff610b6d16565b610917565b5060019392505050565b60045460ff1690565b60045460ff1681565b6000610489610544610913565b846105168560026000610555610913565b600160a060020a03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610c0716565b600061059e610598610913565b83610c6b565b506001919050565b600160a060020a031660009081526001602052604090205490565b6105c9610913565b600054600160a060020a0390811691161461062e576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600061068f610694565b905090565b600054600160a060020a031690565b60058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561046b5780601f106104405761010080835404028352916020019161046b565b6000610489610711610913565b8461051685604051806060016040528060258152602001610ece602591396002600061073b610913565b600160a060020a03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610b6d16565b600061048961077f610913565b8484610a09565b6005805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561080c5780601f106107e15761010080835404028352916020019161080c565b820191906000526020600020905b8154815290600101906020018083116107ef57829003601f168201915b505050505081565b6006805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561080c5780601f106107e15761010080835404028352916020019161080c565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6108a2610913565b600054600160a060020a03908116911614610907576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61091081610d6a565b50565b3390565b600160a060020a03831661095f5760405160e560020a62461bcd028152600401808060200182810382526024815260200180610f196024913960400191505060405180910390fd5b600160a060020a0382166109a75760405160e560020a62461bcd028152600401808060200182810382526022815260200180610f3d6022913960400191505060405180910390fd5b600160a060020a03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a038316610a515760405160e560020a62461bcd028152600401808060200182810382526025815260200180610f5f6025913960400191505060405180910390fd5b600160a060020a038216610a995760405160e560020a62461bcd028152600401808060200182810382526023815260200180610eab6023913960400191505060405180910390fd5b610adc81604051806060016040528060268152602001610ef360269139600160a060020a038616600090815260016020526040902054919063ffffffff610b6d16565b600160a060020a038085166000908152600160205260408082209390935590841681522054610b11908263ffffffff610c0716565b600160a060020a0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bff5760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bc4578181015183820152602001610bac565b50505050905090810190601f168015610bf15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c64576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600160a060020a038216610cb35760405160e560020a62461bcd028152600401808060200182810382526021815260200180610fa66021913960400191505060405180910390fd5b610cf681604051806060016040528060228152602001610f8460229139600160a060020a038516600090815260016020526040902054919063ffffffff610b6d16565b600160a060020a038316600090815260016020526040902055600354610d22908263ffffffff610e1a16565b600355604080518281529051600091600160a060020a038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600160a060020a038116610db25760405160e560020a62461bcd028152600401808060200182810382526026815260200180610e5d6026913960400191505060405180910390fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000610c6483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b6d56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f524332303a207472616e7366657220746f20746865207a65726f20616464726573734f524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f4f524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654f524332303a20617070726f76652066726f6d20746865207a65726f20616464726573734f524332303a20617070726f766520746f20746865207a65726f20616464726573734f524332303a207472616e736665722066726f6d20746865207a65726f20616464726573734f524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f524332303a206275726e2066726f6d20746865207a65726f2061646472657373a265627a7a7231582066ae2027e3a004c35691c80364cf7bde503e6590e21b8a46ae415d143738574a64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x27 PUSH5 0x100000000 PUSH3 0x16C DUP2 MUL DIV JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH32 0x4F4E464100000000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0xB7 SWAP2 PUSH1 0x6 SWAP2 PUSH3 0x171 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP1 DUP3 MSTORE PUSH32 0x4F46540000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0xFE SWAP2 PUSH1 0x5 SWAP2 PUSH3 0x171 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH11 0xA56FA5B99019A5C8000000 PUSH1 0x3 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH3 0x213 JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x1B4 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1E4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1E4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1E4 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1C7 JUMP JUMPDEST POP PUSH3 0x1F2 SWAP3 SWAP2 POP PUSH3 0x1F6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x16E SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FD JUMP JUMPDEST PUSH2 0xFFB DUP1 PUSH3 0x223 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13E JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x715018A6 GT PUSH2 0xCA JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x8E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3B9 JUMPI PUSH2 0x13E JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x323 JUMPI PUSH2 0x13E JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x111 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BF JUMPI PUSH2 0x13E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x185 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1B2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x498 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0x52E JUMP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x537 JUMP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x58B JUMP JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x5C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F7 PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x694 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x704 JUMP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x772 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x786 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x814 JUMP JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x86F JUMP JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x89A JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x46B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x440 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x46B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x44E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x489 PUSH2 0x482 PUSH2 0x913 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x917 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A5 DUP5 DUP5 DUP5 PUSH2 0xA09 JUMP JUMPDEST PUSH2 0x51B DUP5 PUSH2 0x4B1 PUSH2 0x913 JUMP JUMPDEST PUSH2 0x516 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE83 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x4EF PUSH2 0x913 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB6D AND JUMP JUMPDEST PUSH2 0x917 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x489 PUSH2 0x544 PUSH2 0x913 JUMP JUMPDEST DUP5 PUSH2 0x516 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x555 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC07 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59E PUSH2 0x598 PUSH2 0x913 JUMP JUMPDEST DUP4 PUSH2 0xC6B JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5C9 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x62E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68F PUSH2 0x694 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x46B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x440 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x46B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x489 PUSH2 0x711 PUSH2 0x913 JUMP JUMPDEST DUP5 PUSH2 0x516 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xECE PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x73B PUSH2 0x913 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB6D AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x489 PUSH2 0x77F PUSH2 0x913 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x80C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x80C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x80C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x80C JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8A2 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x907 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x910 DUP2 PUSH2 0xD6A JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH2 0x95F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF19 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0x9A7 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF3D PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH2 0xA51 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF5F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0xA99 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xEAB PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xADC DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEF3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB6D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xB11 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xC07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBC4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBAC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xBF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xC64 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0xCB3 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA6 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCF6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF84 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB6D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0xD22 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xE1A AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0xDB2 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE5D PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC64 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xB6D JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654F52 NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 0x4F MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F4F524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E63654F524332303A20617070726F PUSH23 0x652066726F6D20746865207A65726F2061646472657373 0x4F MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x6573734F524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F20616464726573734F524332303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x654F5243 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F2061646472657373A265627A7A7231582066AE2027E3A004 0xC3 JUMP SWAP2 0xC8 SUB PUSH5 0xCF7BDE503E PUSH6 0x90E21B8A46AE COINBASE 0x5D EQ CALLDATACOPY CODESIZE JUMPI 0x4A PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "10968:7748:0:-;;;11277:225;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9527:17:0;9547:12;:10;;;;:12;:::i;:::-;9565:6;:18;;-1:-1:-1;;;;;;9565:18:0;-1:-1:-1;;;;;9565:18:0;;;;;;;9594:43;;9565:18;;-1:-1:-1;9565:18:0;9594:43;;9565:6;;9594:43;-1:-1:-1;11304:14:0;;;;;;;;;;;;;;;;;;;;;;;:5;;:14;:::i;:::-;-1:-1:-1;11324:15:0;;;;;;;;;;;;;;;;;;;;;;;:7;;:15;:::i;:::-;-1:-1:-1;11345:9:0;:14;;-1:-1:-1;;11345:14:0;11357:2;11345:14;;;11380:17;11365:12;:32;;;11413:10;11345:9;11403:21;;;11345:14;11403:21;;;;;;;;:36;;;11451:46;;;;;;11413:10;;11345:9;;11451:46;;;;;;;;;;10968:7748;;3595:90;3670:10;3595:90;;:::o;10968:7748::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10968:7748:0;;;-1:-1:-1;10968:7748:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13E JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x715018A6 GT PUSH2 0xCA JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x8E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3B9 JUMPI PUSH2 0x13E JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x323 JUMPI PUSH2 0x13E JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x111 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BF JUMPI PUSH2 0x13E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x185 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1B2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x498 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0x52E JUMP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x537 JUMP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x58B JUMP JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x5C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F7 PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x694 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x704 JUMP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x772 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x786 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x814 JUMP JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x86F JUMP JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x89A JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x46B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x440 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x46B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x44E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x489 PUSH2 0x482 PUSH2 0x913 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x917 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A5 DUP5 DUP5 DUP5 PUSH2 0xA09 JUMP JUMPDEST PUSH2 0x51B DUP5 PUSH2 0x4B1 PUSH2 0x913 JUMP JUMPDEST PUSH2 0x516 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE83 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x4EF PUSH2 0x913 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB6D AND JUMP JUMPDEST PUSH2 0x917 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x489 PUSH2 0x544 PUSH2 0x913 JUMP JUMPDEST DUP5 PUSH2 0x516 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x555 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC07 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59E PUSH2 0x598 PUSH2 0x913 JUMP JUMPDEST DUP4 PUSH2 0xC6B JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5C9 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x62E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68F PUSH2 0x694 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x46B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x440 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x46B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x489 PUSH2 0x711 PUSH2 0x913 JUMP JUMPDEST DUP5 PUSH2 0x516 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xECE PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x73B PUSH2 0x913 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB6D AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x489 PUSH2 0x77F PUSH2 0x913 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x80C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x80C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x80C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x80C JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8A2 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x907 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x910 DUP2 PUSH2 0xD6A JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH2 0x95F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF19 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0x9A7 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF3D PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH2 0xA51 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF5F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0xA99 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xEAB PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xADC DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEF3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB6D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xB11 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xC07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBC4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBAC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xBF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xC64 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0xCB3 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA6 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCF6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF84 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB6D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0xD22 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xE1A AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0xDB2 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE5D PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC64 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xB6D JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654F52 NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 0x4F MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F4F524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E63654F524332303A20617070726F PUSH23 0x652066726F6D20746865207A65726F2061646472657373 0x4F MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x6573734F524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F20616464726573734F524332303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x654F5243 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F2061646472657373A265627A7A7231582066AE2027E3A004 0xC3 JUMP SWAP2 0xC8 SUB PUSH5 0xCF7BDE503E PUSH6 0x90E21B8A46AE COINBASE 0x5D EQ CALLDATACOPY CODESIZE JUMPI 0x4A PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "10968:7748:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10968:7748:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11942:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11942:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12937:141;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12937:141:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;12070:85;;;:::i;:::-;;;;;;;;;;;;;;;;13509:288;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;13509:288:0;;;;;;;;;;;;;;;;;:::i;11684:77::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11202:22;;;:::i;14165:197::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;14165:197:0;;;;;;;;:::i;15462:107::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15462:107:0;;:::i;12204:104::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12204:104:0;-1:-1:-1;;;;;12204:104:0;;:::i;10293:127::-;;;:::i;:::-;;11553:77;;;:::i;:::-;;;;-1:-1:-1;;;;;11553:77:0;;;;;;;;;;;;;;9710:71;;;:::i;11813:81::-;;;:::i;14818:248::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;14818:248:0;;;;;;;;:::i;12492:147::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12492:147:0;;;;;;;;:::i;11228:21::-;;;:::i;11253:19::-;;;:::i;12688:128::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12688:128:0;;;;;;;;;;:::i;10559:101::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10559:101:0;-1:-1:-1;;;;;10559:101:0;;:::i;11942:77::-;12009:5;12002:12;;;;;;;;-1:-1:-1;;12002:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11981:13;;12002:12;;12009:5;;12002:12;;12009:5;12002:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11942:77;:::o;12937:141::-;13005:4;13017:39;13026:12;:10;:12::i;:::-;13040:7;13049:6;13017:8;:39::i;:::-;-1:-1:-1;13069:4:0;12937:141;;;;:::o;12070:85::-;12138:12;;12070:85;:::o;13509:288::-;13600:4;13612:36;13622:6;13630:9;13641:6;13612:9;:36::i;:::-;13654:121;13663:6;13671:12;:10;:12::i;:::-;13685:89;13723:6;13685:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13685:19:0;;;;;;:11;:19;;;;;;13705:12;:10;:12::i;:::-;-1:-1:-1;;;;;13685:33:0;;;;;;;;;;;;-1:-1:-1;13685:33:0;;;:89;;:37;:89;:::i;:::-;13654:8;:121::i;:::-;-1:-1:-1;13788:4:0;13509:288;;;;;:::o;11684:77::-;11747:9;;;;11684:77;:::o;11202:22::-;;;;;;:::o;14165:197::-;14245:4;14257:83;14266:12;:10;:12::i;:::-;14280:7;14289:50;14328:10;14289:11;:25;14301:12;:10;:12::i;:::-;-1:-1:-1;;;;;14289:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;14289:25:0;;;:34;;;;;;;;;;;:50;:38;:50;:::i;15462:107::-;15508:4;15520:27;15526:12;:10;:12::i;:::-;15540:6;15520:5;:27::i;:::-;-1:-1:-1;15560:4:0;15462:107;;;:::o;12204:104::-;-1:-1:-1;;;;;12285:18:0;12263:7;12285:18;;;:9;:18;;;;;;;12204:104::o;10293:127::-;9906:12;:10;:12::i;:::-;9896:6;;-1:-1:-1;;;;;9896:6:0;;;:22;;;9888:67;;;;;-1:-1:-1;;;;;9888:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10387:1;10371:6;;10350:40;;-1:-1:-1;;;;;10371:6:0;;;;10350:40;;10387:1;;10350:40;10413:1;10396:19;;-1:-1:-1;;10396:19:0;;;10293:127::o;11553:77::-;11596:7;11618;:5;:7::i;:::-;11611:14;;11553:77;:::o;9710:71::-;9748:7;9770:6;-1:-1:-1;;;;;9770:6:0;9710:71;:::o;11813:81::-;11882:7;11875:14;;;;;;;;-1:-1:-1;;11875:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11854:13;;11875:14;;11882:7;;11875:14;;11882:7;11875:14;;;;;;;;;;;;;;;;;;;;;;;;14818:248;14903:4;14915:129;14924:12;:10;:12::i;:::-;14938:7;14947:96;14986:15;14947:96;;;;;;;;;;;;;;;;;:11;:25;14959:12;:10;:12::i;:::-;-1:-1:-1;;;;;14947:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;14947:25:0;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;12492:147::-;12563:4;12575:42;12585:12;:10;:12::i;:::-;12599:9;12610:6;12575:9;:42::i;11228:21::-;;;;;;;;;;;;;;;-1:-1:-1;;11228:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11253:19::-;;;;;;;;;;;;;;;-1:-1:-1;;11253:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12688:128;-1:-1:-1;;;;;12784:18:0;;;12762:7;12784:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;12688:128::o;10559:101::-;9906:12;:10;:12::i;:::-;9896:6;;-1:-1:-1;;;;;9896:6:0;;;:22;;;9888:67;;;;;-1:-1:-1;;;;;9888:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10627:28;10646:8;10627:18;:28::i;:::-;10559:101;:::o;3595:90::-;3670:10;3595:90;:::o;18017:314::-;-1:-1:-1;;;;;18106:19:0;;18098:68;;;;-1:-1:-1;;;;;18098:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18180:21:0;;18172:68;;;;-1:-1:-1;;;;;18172:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18247:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;18294:32;;;;;;;;;;;;;;;;;18017:314;;;:::o;16013:442::-;-1:-1:-1;;;;;16106:20:0;;16098:70;;;;-1:-1:-1;;;;;16098:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16182:23:0;;16174:71;;;;-1:-1:-1;;;;;16174:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16272;16294:6;16272:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16272:17:0;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;16252:17:0;;;;;;;:9;:17;;;;;;:91;;;;16372:20;;;;;;;:32;;16397:6;16372:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;16349:20:0;;;;;;;:9;:20;;;;;;;;;:55;;;;16415:35;;;;;;;16349:20;;16415:35;;;;;;;;;;;;;16013:442;;;:::o;5492:173::-;5578:7;5609:12;5601:6;;;;5593:29;;;;-1:-1:-1;;;;;5593:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5593:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5640:5:0;;;5492:173::o;4694:162::-;4752:7;4779:5;;;4798:6;;;;4790:46;;;;;-1:-1:-1;;;;;4790:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4850:1;4694:162;-1:-1:-1;;;4694:162:0:o;17296:324::-;-1:-1:-1;;;;;17367:21:0;;17359:67;;;;-1:-1:-1;;;;;17359:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17454:68;17477:6;17454:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17454:18:0;;;;;;:9;:18;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;17433:18:0;;;;;;:9;:18;;;;;:89;17543:12;;:24;;17560:6;17543:24;:16;:24;:::i;:::-;17528:12;:39;17578:37;;;;;;;;17604:1;;-1:-1:-1;;;;;17578:37:0;;;;;;;;;;;;17296:324;;:::o;10753:211::-;-1:-1:-1;;;;;10822:22:0;;10814:73;;;;-1:-1:-1;;;;;10814:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10919:6;;;10898:38;;-1:-1:-1;;;;;10898:38:0;;;;10919:6;;;10898:38;;;10942:6;:17;;-1:-1:-1;;10942:17:0;-1:-1:-1;;;;;10942:17:0;;;;;;;;;;10753:211::o;5100:128::-;5158:7;5180:43;5184:1;5187;5180:43;;;;;;;;;;;;;;;;;:3;:43::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "818200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_decimals()": "313",
								"_name()": "infinite",
								"_symbol()": "infinite",
								"allowance(address,address)": "627",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "542",
								"burn(uint256)": "infinite",
								"decimals()": "291",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "406",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "393",
								"renounceOwnership()": "22004",
								"symbol()": "infinite",
								"totalSupply()": "321",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "MSTORE"
								},
								{
									"begin": 11277,
									"end": 11502,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 9527,
									"end": 9544,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9547,
									"end": 9559,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 9547,
									"end": 9557,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 9547,
									"end": 9557,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 9547,
									"end": 9557,
									"name": "DUP2"
								},
								{
									"begin": 9547,
									"end": 9557,
									"name": "MUL"
								},
								{
									"begin": 9547,
									"end": 9559,
									"name": "DIV"
								},
								{
									"begin": 9547,
									"end": 9559,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9547,
									"end": 9559,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 9547,
									"end": 9559,
									"name": "JUMPDEST"
								},
								{
									"begin": 9565,
									"end": 9571,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "DUP1"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "DUP4"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "AND"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "SWAP1"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "DUP2"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "OR"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "DUP3"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "SSTORE"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "MLOAD"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "SWAP3"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "SWAP2"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "SWAP1"
								},
								{
									"begin": 9565,
									"end": 9571,
									"name": "DUP3"
								},
								{
									"begin": 9565,
									"end": 9571,
									"name": "SWAP1"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "LOG3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "DUP1"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "MLOAD"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "DUP1"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "DUP3"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "ADD"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "SWAP1"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "SWAP2"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "MSTORE"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "DUP1"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "DUP3"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "MSTORE"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "PUSH",
									"value": "4F4E464100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "SWAP1"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "SWAP3"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "ADD"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "SWAP2"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "DUP3"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "MSTORE"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "SWAP2"
								},
								{
									"begin": 11304,
									"end": 11309,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 11304,
									"end": 11309,
									"name": "SWAP2"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 11304,
									"end": 11318,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "DUP1"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "MLOAD"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "DUP1"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "DUP3"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "ADD"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "SWAP1"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "SWAP2"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "MSTORE"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "DUP1"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "DUP3"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "MSTORE"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "PUSH",
									"value": "4F46540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "SWAP1"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "SWAP3"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "ADD"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "SWAP2"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "DUP3"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "MSTORE"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "SWAP2"
								},
								{
									"begin": 11324,
									"end": 11331,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11324,
									"end": 11331,
									"name": "SWAP2"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 11324,
									"end": 11339,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11345,
									"end": 11354,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11345,
									"end": 11359,
									"name": "DUP1"
								},
								{
									"begin": 11345,
									"end": 11359,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 11345,
									"end": 11359,
									"name": "AND"
								},
								{
									"begin": 11357,
									"end": 11359,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 11345,
									"end": 11359,
									"name": "OR"
								},
								{
									"begin": 11345,
									"end": 11359,
									"name": "SWAP1"
								},
								{
									"begin": 11345,
									"end": 11359,
									"name": "SSTORE"
								},
								{
									"begin": 11380,
									"end": 11397,
									"name": "PUSH",
									"value": "A56FA5B99019A5C8000000"
								},
								{
									"begin": 11365,
									"end": 11377,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11365,
									"end": 11397,
									"name": "DUP2"
								},
								{
									"begin": 11365,
									"end": 11397,
									"name": "SWAP1"
								},
								{
									"begin": 11365,
									"end": 11397,
									"name": "SSTORE"
								},
								{
									"begin": 11413,
									"end": 11423,
									"name": "CALLER"
								},
								{
									"begin": 11345,
									"end": 11354,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11403,
									"end": 11424,
									"name": "DUP2"
								},
								{
									"begin": 11403,
									"end": 11424,
									"name": "DUP2"
								},
								{
									"begin": 11403,
									"end": 11424,
									"name": "MSTORE"
								},
								{
									"begin": 11345,
									"end": 11359,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11403,
									"end": 11424,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11403,
									"end": 11424,
									"name": "SWAP1"
								},
								{
									"begin": 11403,
									"end": 11424,
									"name": "DUP2"
								},
								{
									"begin": 11403,
									"end": 11424,
									"name": "MSTORE"
								},
								{
									"begin": 11403,
									"end": 11424,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11403,
									"end": 11424,
									"name": "DUP1"
								},
								{
									"begin": 11403,
									"end": 11424,
									"name": "DUP4"
								},
								{
									"begin": 11403,
									"end": 11424,
									"name": "KECCAK256"
								},
								{
									"begin": 11403,
									"end": 11439,
									"name": "DUP6"
								},
								{
									"begin": 11403,
									"end": 11439,
									"name": "SWAP1"
								},
								{
									"begin": 11403,
									"end": 11439,
									"name": "SSTORE"
								},
								{
									"begin": 11451,
									"end": 11497,
									"name": "DUP1"
								},
								{
									"begin": 11451,
									"end": 11497,
									"name": "MLOAD"
								},
								{
									"begin": 11451,
									"end": 11497,
									"name": "SWAP5"
								},
								{
									"begin": 11451,
									"end": 11497,
									"name": "DUP6"
								},
								{
									"begin": 11451,
									"end": 11497,
									"name": "MSTORE"
								},
								{
									"begin": 11451,
									"end": 11497,
									"name": "MLOAD"
								},
								{
									"begin": 11413,
									"end": 11423,
									"name": "SWAP3"
								},
								{
									"begin": 11413,
									"end": 11423,
									"name": "SWAP4"
								},
								{
									"begin": 11345,
									"end": 11354,
									"name": "SWAP2"
								},
								{
									"begin": 11345,
									"end": 11354,
									"name": "SWAP3"
								},
								{
									"begin": 11451,
									"end": 11497,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11451,
									"end": 11497,
									"name": "SWAP3"
								},
								{
									"begin": 11451,
									"end": 11497,
									"name": "DUP2"
								},
								{
									"begin": 11451,
									"end": 11497,
									"name": "SWAP1"
								},
								{
									"begin": 11451,
									"end": 11497,
									"name": "SUB"
								},
								{
									"begin": 11451,
									"end": 11497,
									"name": "SWAP1"
								},
								{
									"begin": 11451,
									"end": 11497,
									"name": "SWAP2"
								},
								{
									"begin": 11451,
									"end": 11497,
									"name": "ADD"
								},
								{
									"begin": 11451,
									"end": 11497,
									"name": "SWAP1"
								},
								{
									"begin": 11451,
									"end": 11497,
									"name": "LOG3"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "JUMP"
								},
								{
									"begin": 3595,
									"end": 3685,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 3595,
									"end": 3685,
									"name": "JUMPDEST"
								},
								{
									"begin": 3670,
									"end": 3680,
									"name": "CALLER"
								},
								{
									"begin": 3595,
									"end": 3685,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 3595,
									"end": 3685,
									"name": "JUMPDEST"
								},
								{
									"begin": 3595,
									"end": 3685,
									"name": "SWAP1"
								},
								{
									"begin": 3595,
									"end": 3685,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP1"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SLOAD"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP2"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "AND"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "ISZERO"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "MUL"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SUB"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "AND"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DIV"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "MSTORE"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "KECCAK256"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DIV"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP2"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SWAP3"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "LT"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "JUMPI"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP1"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "MLOAD"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "NOT"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "AND"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP4"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP1"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "OR"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP6"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SSTORE"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "JUMP"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP1"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP6"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SSTORE"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "ISZERO"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "JUMPI"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SWAP2"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP2"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "GT"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "ISZERO"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "JUMPI"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "MLOAD"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SSTORE"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SWAP2"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SWAP2"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "JUMP"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SWAP3"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "POP"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SWAP2"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP1"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "GT"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "ISZERO"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "JUMPI"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP2"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "SSTORE"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "JUMP"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "DUP1"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "CODECOPY"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10968,
									"end": 18716,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582066ae2027e3a004c35691c80364cf7bde503e6590e21b8a46ae415d143738574a64736f6c63430005100032",
									".code": [
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "MSTORE"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "POP"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "LT"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "SWAP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DIV"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "GT"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "GT"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "B09F1266"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "D28D8852"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMP"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPDEST"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMP"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPDEST"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "GT"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "32424AA3"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMP"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPDEST"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "JUMPDEST"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18716,
											"name": "REVERT"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "JUMPDEST"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "JUMPDEST"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP1"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "MLOAD"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP1"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP3"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "MSTORE"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP4"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "MLOAD"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP2"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP4"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "ADD"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "MSTORE"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP4"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "MLOAD"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "SWAP2"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "SWAP3"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP4"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "SWAP3"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "SWAP1"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP4"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "ADD"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "SWAP2"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP6"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "ADD"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "SWAP1"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP1"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP4"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP4"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "POP"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "POP"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "POP"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "SWAP1"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "POP"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "SWAP1"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP2"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "ADD"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "SWAP1"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "AND"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP1"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "ISZERO"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "JUMPI"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP1"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP3"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "SUB"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP1"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "MLOAD"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP4"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "SUB"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "EXP"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "SUB"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "NOT"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "AND"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP2"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "MSTORE"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "ADD"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "SWAP2"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "POP"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "JUMPDEST"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "POP"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "SWAP3"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "POP"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "POP"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "POP"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "MLOAD"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "DUP1"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "SWAP2"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "SUB"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "SWAP1"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "RETURN"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "JUMPDEST"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "DUP1"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "DUP2"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "AND"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "SWAP1"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "ADD"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "JUMPDEST"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "DUP1"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "MLOAD"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "SWAP2"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "ISZERO"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "ISZERO"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "DUP3"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "MSTORE"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "MLOAD"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "SWAP1"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "DUP2"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "SWAP1"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "SUB"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "ADD"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "SWAP1"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "RETURN"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "JUMPDEST"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "JUMPDEST"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "DUP1"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "MLOAD"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "SWAP2"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "DUP3"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "MSTORE"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "MLOAD"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "SWAP1"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "DUP2"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "SWAP1"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "SUB"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "ADD"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "SWAP1"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "RETURN"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "JUMPDEST"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "DUP1"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "DUP2"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "DUP2"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "AND"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "SWAP2"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "DUP2"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "ADD"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "SWAP1"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "SWAP2"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "AND"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "SWAP1"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "ADD"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "JUMPDEST"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "JUMPDEST"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "DUP1"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "MLOAD"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "SWAP1"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "SWAP3"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "AND"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "DUP3"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "MSTORE"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "MLOAD"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "SWAP1"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "DUP2"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "SWAP1"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "SUB"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "ADD"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "SWAP1"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "RETURN"
										},
										{
											"begin": 11202,
											"end": 11224,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 11202,
											"end": 11224,
											"name": "JUMPDEST"
										},
										{
											"begin": 11202,
											"end": 11224,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 11202,
											"end": 11224,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 11202,
											"end": 11224,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14165,
											"end": 14362,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 14165,
											"end": 14362,
											"name": "JUMPDEST"
										},
										{
											"begin": 14165,
											"end": 14362,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 14165,
											"end": 14362,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14165,
											"end": 14362,
											"name": "DUP1"
										},
										{
											"begin": 14165,
											"end": 14362,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14165,
											"end": 14362,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14165,
											"end": 14362,
											"name": "DUP2"
										},
										{
											"begin": 14165,
											"end": 14362,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14165,
											"end": 14362,
											"name": "AND"
										},
										{
											"begin": 14165,
											"end": 14362,
											"name": "SWAP1"
										},
										{
											"begin": 14165,
											"end": 14362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14165,
											"end": 14362,
											"name": "ADD"
										},
										{
											"begin": 14165,
											"end": 14362,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14165,
											"end": 14362,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 14165,
											"end": 14362,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15462,
											"end": 15569,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 15462,
											"end": 15569,
											"name": "JUMPDEST"
										},
										{
											"begin": 15462,
											"end": 15569,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 15462,
											"end": 15569,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15462,
											"end": 15569,
											"name": "DUP1"
										},
										{
											"begin": 15462,
											"end": 15569,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15462,
											"end": 15569,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 15462,
											"end": 15569,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15462,
											"end": 15569,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 15462,
											"end": 15569,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12204,
											"end": 12308,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 12204,
											"end": 12308,
											"name": "JUMPDEST"
										},
										{
											"begin": 12204,
											"end": 12308,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 12204,
											"end": 12308,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12204,
											"end": 12308,
											"name": "DUP1"
										},
										{
											"begin": 12204,
											"end": 12308,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12204,
											"end": 12308,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12204,
											"end": 12308,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12204,
											"end": 12308,
											"name": "AND"
										},
										{
											"begin": 12204,
											"end": 12308,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 12204,
											"end": 12308,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "JUMPDEST"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "JUMPDEST"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "STOP"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "JUMPDEST"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "JUMPDEST"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "DUP1"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "SWAP1"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "SWAP3"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "AND"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "DUP3"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "MSTORE"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "MLOAD"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "SWAP1"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "DUP2"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "SWAP1"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "SUB"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "ADD"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "SWAP1"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "RETURN"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "JUMPDEST"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11813,
											"end": 11894,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 11813,
											"end": 11894,
											"name": "JUMPDEST"
										},
										{
											"begin": 11813,
											"end": 11894,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 11813,
											"end": 11894,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 11813,
											"end": 11894,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14818,
											"end": 15066,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 14818,
											"end": 15066,
											"name": "JUMPDEST"
										},
										{
											"begin": 14818,
											"end": 15066,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 14818,
											"end": 15066,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14818,
											"end": 15066,
											"name": "DUP1"
										},
										{
											"begin": 14818,
											"end": 15066,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14818,
											"end": 15066,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14818,
											"end": 15066,
											"name": "DUP2"
										},
										{
											"begin": 14818,
											"end": 15066,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14818,
											"end": 15066,
											"name": "AND"
										},
										{
											"begin": 14818,
											"end": 15066,
											"name": "SWAP1"
										},
										{
											"begin": 14818,
											"end": 15066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14818,
											"end": 15066,
											"name": "ADD"
										},
										{
											"begin": 14818,
											"end": 15066,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14818,
											"end": 15066,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 14818,
											"end": 15066,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12492,
											"end": 12639,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 12492,
											"end": 12639,
											"name": "JUMPDEST"
										},
										{
											"begin": 12492,
											"end": 12639,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 12492,
											"end": 12639,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12492,
											"end": 12639,
											"name": "DUP1"
										},
										{
											"begin": 12492,
											"end": 12639,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12492,
											"end": 12639,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12492,
											"end": 12639,
											"name": "DUP2"
										},
										{
											"begin": 12492,
											"end": 12639,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12492,
											"end": 12639,
											"name": "AND"
										},
										{
											"begin": 12492,
											"end": 12639,
											"name": "SWAP1"
										},
										{
											"begin": 12492,
											"end": 12639,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12492,
											"end": 12639,
											"name": "ADD"
										},
										{
											"begin": 12492,
											"end": 12639,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12492,
											"end": 12639,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 12492,
											"end": 12639,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "JUMPDEST"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "JUMPDEST"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "JUMPDEST"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "DUP1"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "DUP2"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "DUP2"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "AND"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "SWAP2"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "ADD"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "AND"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "JUMPDEST"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "DUP1"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "AND"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "JUMPDEST"
										},
										{
											"begin": 12009,
											"end": 12014,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP1"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SLOAD"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP1"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "MLOAD"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP9"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "AND"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "ISZERO"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "MUL"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "ADD"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP1"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP6"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "AND"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP5"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP1"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP5"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DIV"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP4"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP5"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "ADD"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP2"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP1"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DIV"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP2"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "MUL"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP3"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "ADD"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP2"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "ADD"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP1"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP3"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "MSTORE"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP3"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP2"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "MSTORE"
										},
										{
											"begin": 11981,
											"end": 11994,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11981,
											"end": 11994,
											"name": "SWAP4"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP1"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP3"
										},
										{
											"begin": 12009,
											"end": 12014,
											"name": "SWAP1"
										},
										{
											"begin": 12009,
											"end": 12014,
											"name": "SWAP2"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP4"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "ADD"
										},
										{
											"begin": 12009,
											"end": 12014,
											"name": "DUP3"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP3"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP1"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "ISZERO"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "JUMPI"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP1"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "LT"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "JUMPI"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP1"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP4"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SLOAD"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DIV"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "MUL"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP4"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "MSTORE"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP2"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "ADD"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP2"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "JUMP"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "JUMPDEST"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP3"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "ADD"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP2"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP1"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "MSTORE"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "KECCAK256"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP1"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "JUMPDEST"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP2"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SLOAD"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP2"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "MSTORE"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP1"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "ADD"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP1"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "ADD"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP1"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP4"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "GT"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "JUMPI"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP3"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP1"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SUB"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "AND"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "DUP3"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "ADD"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP2"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "JUMPDEST"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "POP"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "POP"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "POP"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "POP"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "POP"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "SWAP1"
										},
										{
											"begin": 12002,
											"end": 12014,
											"name": "POP"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "SWAP1"
										},
										{
											"begin": 11942,
											"end": 12019,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "JUMPDEST"
										},
										{
											"begin": 13005,
											"end": 13009,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13017,
											"end": 13056,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 13026,
											"end": 13038,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 13026,
											"end": 13036,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 13026,
											"end": 13038,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13026,
											"end": 13038,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 13026,
											"end": 13038,
											"name": "JUMPDEST"
										},
										{
											"begin": 13040,
											"end": 13047,
											"name": "DUP5"
										},
										{
											"begin": 13049,
											"end": 13055,
											"name": "DUP5"
										},
										{
											"begin": 13017,
											"end": 13025,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 13017,
											"end": 13056,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13017,
											"end": 13056,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 13017,
											"end": 13056,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13069,
											"end": 13073,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "SWAP3"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "SWAP2"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "POP"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "POP"
										},
										{
											"begin": 12937,
											"end": 13078,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "JUMPDEST"
										},
										{
											"begin": 12138,
											"end": 12150,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 12138,
											"end": 12150,
											"name": "SLOAD"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "SWAP1"
										},
										{
											"begin": 12070,
											"end": 12155,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "JUMPDEST"
										},
										{
											"begin": 13600,
											"end": 13604,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13612,
											"end": 13648,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 13622,
											"end": 13628,
											"name": "DUP5"
										},
										{
											"begin": 13630,
											"end": 13639,
											"name": "DUP5"
										},
										{
											"begin": 13641,
											"end": 13647,
											"name": "DUP5"
										},
										{
											"begin": 13612,
											"end": 13621,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 13612,
											"end": 13648,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13612,
											"end": 13648,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 13612,
											"end": 13648,
											"name": "JUMPDEST"
										},
										{
											"begin": 13654,
											"end": 13775,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 13663,
											"end": 13669,
											"name": "DUP5"
										},
										{
											"begin": 13671,
											"end": 13683,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 13671,
											"end": 13681,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 13671,
											"end": 13683,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13671,
											"end": 13683,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 13671,
											"end": 13683,
											"name": "JUMPDEST"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 13723,
											"end": 13729,
											"name": "DUP6"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "MLOAD"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "DUP1"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "ADD"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "MSTORE"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "DUP1"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "DUP2"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "MSTORE"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "ADD"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "PUSH data",
											"value": "3D234848B1165C1D44EE096354D96B78EE9AA8EF9F4DD8FB59ED7216DBDA102F"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "SWAP2"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13685,
											"end": 13704,
											"name": "DUP11"
										},
										{
											"begin": 13685,
											"end": 13704,
											"name": "AND"
										},
										{
											"begin": 13685,
											"end": 13704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13685,
											"end": 13704,
											"name": "SWAP1"
										},
										{
											"begin": 13685,
											"end": 13704,
											"name": "DUP2"
										},
										{
											"begin": 13685,
											"end": 13704,
											"name": "MSTORE"
										},
										{
											"begin": 13685,
											"end": 13696,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13685,
											"end": 13704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13685,
											"end": 13704,
											"name": "MSTORE"
										},
										{
											"begin": 13685,
											"end": 13704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13685,
											"end": 13704,
											"name": "DUP2"
										},
										{
											"begin": 13685,
											"end": 13704,
											"name": "KECCAK256"
										},
										{
											"begin": 13685,
											"end": 13704,
											"name": "SWAP1"
										},
										{
											"begin": 13705,
											"end": 13717,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 13705,
											"end": 13715,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 13705,
											"end": 13717,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13705,
											"end": 13717,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 13705,
											"end": 13717,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13685,
											"end": 13718,
											"name": "AND"
										},
										{
											"begin": 13685,
											"end": 13718,
											"name": "DUP2"
										},
										{
											"begin": 13685,
											"end": 13718,
											"name": "MSTORE"
										},
										{
											"begin": 13685,
											"end": 13718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13685,
											"end": 13718,
											"name": "DUP2"
										},
										{
											"begin": 13685,
											"end": 13718,
											"name": "ADD"
										},
										{
											"begin": 13685,
											"end": 13718,
											"name": "SWAP2"
										},
										{
											"begin": 13685,
											"end": 13718,
											"name": "SWAP1"
										},
										{
											"begin": 13685,
											"end": 13718,
											"name": "SWAP2"
										},
										{
											"begin": 13685,
											"end": 13718,
											"name": "MSTORE"
										},
										{
											"begin": 13685,
											"end": 13718,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13685,
											"end": 13718,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13685,
											"end": 13718,
											"name": "KECCAK256"
										},
										{
											"begin": 13685,
											"end": 13718,
											"name": "SLOAD"
										},
										{
											"begin": 13685,
											"end": 13718,
											"name": "SWAP2"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "SWAP1"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13685,
											"end": 13722,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "AND"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 13685,
											"end": 13774,
											"name": "JUMPDEST"
										},
										{
											"begin": 13654,
											"end": 13662,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 13654,
											"end": 13775,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13654,
											"end": 13775,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 13654,
											"end": 13775,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13788,
											"end": 13792,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "SWAP4"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "SWAP3"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "POP"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "POP"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "POP"
										},
										{
											"begin": 13509,
											"end": 13797,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "JUMPDEST"
										},
										{
											"begin": 11747,
											"end": 11756,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11747,
											"end": 11756,
											"name": "SLOAD"
										},
										{
											"begin": 11747,
											"end": 11756,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11747,
											"end": 11756,
											"name": "AND"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "SWAP1"
										},
										{
											"begin": 11684,
											"end": 11761,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11202,
											"end": 11224,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 11202,
											"end": 11224,
											"name": "JUMPDEST"
										},
										{
											"begin": 11202,
											"end": 11224,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11202,
											"end": 11224,
											"name": "SLOAD"
										},
										{
											"begin": 11202,
											"end": 11224,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11202,
											"end": 11224,
											"name": "AND"
										},
										{
											"begin": 11202,
											"end": 11224,
											"name": "DUP2"
										},
										{
											"begin": 11202,
											"end": 11224,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14165,
											"end": 14362,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 14165,
											"end": 14362,
											"name": "JUMPDEST"
										},
										{
											"begin": 14245,
											"end": 14249,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14257,
											"end": 14340,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 14266,
											"end": 14278,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 14266,
											"end": 14276,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 14266,
											"end": 14278,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14266,
											"end": 14278,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 14266,
											"end": 14278,
											"name": "JUMPDEST"
										},
										{
											"begin": 14280,
											"end": 14287,
											"name": "DUP5"
										},
										{
											"begin": 14289,
											"end": 14339,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 14328,
											"end": 14338,
											"name": "DUP6"
										},
										{
											"begin": 14289,
											"end": 14300,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14301,
											"end": 14313,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 14301,
											"end": 14311,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 14301,
											"end": 14313,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14301,
											"end": 14313,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 14301,
											"end": 14313,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "SWAP1"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "DUP2"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "AND"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "DUP3"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "MSTORE"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "DUP1"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "DUP4"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "ADD"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "SWAP4"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "SWAP1"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "SWAP4"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "MSTORE"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "SWAP2"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "DUP3"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "SWAP1"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "DUP2"
										},
										{
											"begin": 14289,
											"end": 14314,
											"name": "KECCAK256"
										},
										{
											"begin": 14289,
											"end": 14323,
											"name": "SWAP2"
										},
										{
											"begin": 14289,
											"end": 14323,
											"name": "DUP13"
										},
										{
											"begin": 14289,
											"end": 14323,
											"name": "AND"
										},
										{
											"begin": 14289,
											"end": 14323,
											"name": "DUP2"
										},
										{
											"begin": 14289,
											"end": 14323,
											"name": "MSTORE"
										},
										{
											"begin": 14289,
											"end": 14323,
											"name": "SWAP3"
										},
										{
											"begin": 14289,
											"end": 14323,
											"name": "MSTORE"
										},
										{
											"begin": 14289,
											"end": 14323,
											"name": "SWAP1"
										},
										{
											"begin": 14289,
											"end": 14323,
											"name": "KECCAK256"
										},
										{
											"begin": 14289,
											"end": 14323,
											"name": "SLOAD"
										},
										{
											"begin": 14289,
											"end": 14323,
											"name": "SWAP1"
										},
										{
											"begin": 14289,
											"end": 14339,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14289,
											"end": 14327,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 14289,
											"end": 14339,
											"name": "AND"
										},
										{
											"begin": 14289,
											"end": 14339,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15462,
											"end": 15569,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 15462,
											"end": 15569,
											"name": "JUMPDEST"
										},
										{
											"begin": 15508,
											"end": 15512,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15520,
											"end": 15547,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 15526,
											"end": 15538,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 15526,
											"end": 15536,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 15526,
											"end": 15538,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15526,
											"end": 15538,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 15526,
											"end": 15538,
											"name": "JUMPDEST"
										},
										{
											"begin": 15540,
											"end": 15546,
											"name": "DUP4"
										},
										{
											"begin": 15520,
											"end": 15525,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 15520,
											"end": 15547,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15520,
											"end": 15547,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 15520,
											"end": 15547,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 15560,
											"end": 15564,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15462,
											"end": 15569,
											"name": "SWAP2"
										},
										{
											"begin": 15462,
											"end": 15569,
											"name": "SWAP1"
										},
										{
											"begin": 15462,
											"end": 15569,
											"name": "POP"
										},
										{
											"begin": 15462,
											"end": 15569,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12204,
											"end": 12308,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 12204,
											"end": 12308,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12285,
											"end": 12303,
											"name": "AND"
										},
										{
											"begin": 12263,
											"end": 12270,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12285,
											"end": 12303,
											"name": "SWAP1"
										},
										{
											"begin": 12285,
											"end": 12303,
											"name": "DUP2"
										},
										{
											"begin": 12285,
											"end": 12303,
											"name": "MSTORE"
										},
										{
											"begin": 12285,
											"end": 12294,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12285,
											"end": 12303,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12285,
											"end": 12303,
											"name": "MSTORE"
										},
										{
											"begin": 12285,
											"end": 12303,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12285,
											"end": 12303,
											"name": "SWAP1"
										},
										{
											"begin": 12285,
											"end": 12303,
											"name": "KECCAK256"
										},
										{
											"begin": 12285,
											"end": 12303,
											"name": "SLOAD"
										},
										{
											"begin": 12285,
											"end": 12303,
											"name": "SWAP1"
										},
										{
											"begin": 12204,
											"end": 12308,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "JUMPDEST"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 9906,
											"end": 9916,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "JUMPDEST"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SWAP1"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "DUP2"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "AND"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "SWAP2"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "AND"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "EQ"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "JUMPI"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MLOAD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SUB"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "REVERT"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "JUMPDEST"
										},
										{
											"begin": 10387,
											"end": 10388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "DUP1"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "SLOAD"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "SWAP1"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "SWAP2"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "AND"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "SWAP1"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "SWAP1"
										},
										{
											"begin": 10387,
											"end": 10388,
											"name": "DUP4"
										},
										{
											"begin": 10387,
											"end": 10388,
											"name": "SWAP1"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "LOG3"
										},
										{
											"begin": 10413,
											"end": 10414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "DUP1"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "AND"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "SWAP1"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "SSTORE"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "JUMPDEST"
										},
										{
											"begin": 11596,
											"end": 11603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11618,
											"end": 11625,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 11618,
											"end": 11623,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 11618,
											"end": 11625,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11618,
											"end": 11625,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 11618,
											"end": 11625,
											"name": "JUMPDEST"
										},
										{
											"begin": 11611,
											"end": 11625,
											"name": "SWAP1"
										},
										{
											"begin": 11611,
											"end": 11625,
											"name": "POP"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "SWAP1"
										},
										{
											"begin": 11553,
											"end": 11630,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "JUMPDEST"
										},
										{
											"begin": 9748,
											"end": 9755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9770,
											"end": 9776,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9770,
											"end": 9776,
											"name": "AND"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "SWAP1"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11813,
											"end": 11894,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 11813,
											"end": 11894,
											"name": "JUMPDEST"
										},
										{
											"begin": 11882,
											"end": 11889,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DUP1"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "SLOAD"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DUP1"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "MLOAD"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DUP9"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "AND"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "ISZERO"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "MUL"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "ADD"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "SWAP1"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "SWAP6"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "AND"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "SWAP5"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "SWAP1"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "SWAP5"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DIV"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "SWAP4"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DUP5"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "ADD"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DUP2"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "SWAP1"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DIV"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DUP2"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "MUL"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DUP3"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "ADD"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DUP2"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "ADD"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "SWAP1"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "SWAP3"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "MSTORE"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DUP3"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DUP2"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "MSTORE"
										},
										{
											"begin": 11854,
											"end": 11867,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11854,
											"end": 11867,
											"name": "SWAP4"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "SWAP1"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "SWAP3"
										},
										{
											"begin": 11882,
											"end": 11889,
											"name": "SWAP1"
										},
										{
											"begin": 11882,
											"end": 11889,
											"name": "SWAP2"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DUP4"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "ADD"
										},
										{
											"begin": 11882,
											"end": 11889,
											"name": "DUP3"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DUP3"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DUP1"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "ISZERO"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "JUMPI"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DUP1"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "LT"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "JUMPI"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DUP1"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DUP4"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "SLOAD"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DIV"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "MUL"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "DUP4"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "MSTORE"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "SWAP2"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "ADD"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "SWAP2"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 11875,
											"end": 11889,
											"name": "JUMP"
										},
										{
											"begin": 14818,
											"end": 15066,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 14818,
											"end": 15066,
											"name": "JUMPDEST"
										},
										{
											"begin": 14903,
											"end": 14907,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14915,
											"end": 15044,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 14924,
											"end": 14936,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 14924,
											"end": 14934,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 14924,
											"end": 14936,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14924,
											"end": 14936,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 14924,
											"end": 14936,
											"name": "JUMPDEST"
										},
										{
											"begin": 14938,
											"end": 14945,
											"name": "DUP5"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 14986,
											"end": 15001,
											"name": "DUP6"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "MLOAD"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "DUP1"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "ADD"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "MSTORE"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "DUP1"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "DUP2"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "MSTORE"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "ADD"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "PUSH data",
											"value": "87D6DB954C608985F03F8B1FEF85ED6DCB004F13FA99EB0D65CFD43383C12A83"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "SWAP2"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "CODECOPY"
										},
										{
											"begin": 14947,
											"end": 14958,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14959,
											"end": 14971,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 14959,
											"end": 14969,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 14959,
											"end": 14971,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14959,
											"end": 14971,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 14959,
											"end": 14971,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "SWAP1"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "DUP2"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "AND"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "DUP3"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "MSTORE"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "DUP1"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "DUP4"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "ADD"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "SWAP4"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "SWAP1"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "SWAP4"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "MSTORE"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "SWAP2"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "DUP3"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "SWAP1"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "DUP2"
										},
										{
											"begin": 14947,
											"end": 14972,
											"name": "KECCAK256"
										},
										{
											"begin": 14947,
											"end": 14981,
											"name": "SWAP2"
										},
										{
											"begin": 14947,
											"end": 14981,
											"name": "DUP14"
										},
										{
											"begin": 14947,
											"end": 14981,
											"name": "AND"
										},
										{
											"begin": 14947,
											"end": 14981,
											"name": "DUP2"
										},
										{
											"begin": 14947,
											"end": 14981,
											"name": "MSTORE"
										},
										{
											"begin": 14947,
											"end": 14981,
											"name": "SWAP3"
										},
										{
											"begin": 14947,
											"end": 14981,
											"name": "MSTORE"
										},
										{
											"begin": 14947,
											"end": 14981,
											"name": "SWAP1"
										},
										{
											"begin": 14947,
											"end": 14981,
											"name": "KECCAK256"
										},
										{
											"begin": 14947,
											"end": 14981,
											"name": "SLOAD"
										},
										{
											"begin": 14947,
											"end": 14981,
											"name": "SWAP2"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "SWAP1"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14947,
											"end": 14985,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "AND"
										},
										{
											"begin": 14947,
											"end": 15043,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12492,
											"end": 12639,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 12492,
											"end": 12639,
											"name": "JUMPDEST"
										},
										{
											"begin": 12563,
											"end": 12567,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12575,
											"end": 12617,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 12585,
											"end": 12597,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 12585,
											"end": 12595,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 12585,
											"end": 12597,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12585,
											"end": 12597,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 12585,
											"end": 12597,
											"name": "JUMPDEST"
										},
										{
											"begin": 12599,
											"end": 12608,
											"name": "DUP5"
										},
										{
											"begin": 12610,
											"end": 12616,
											"name": "DUP5"
										},
										{
											"begin": 12575,
											"end": 12584,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 12575,
											"end": 12617,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "JUMPDEST"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP1"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SLOAD"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP1"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "MLOAD"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP6"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "AND"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "ISZERO"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "ADD"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SWAP1"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SWAP5"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "AND"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SWAP4"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SWAP1"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SWAP4"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DIV"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP2"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "ADD"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP5"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SWAP1"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DIV"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP5"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "MUL"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP3"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "ADD"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP5"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "ADD"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SWAP1"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SWAP3"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "MSTORE"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP2"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP2"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "MSTORE"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SWAP3"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SWAP2"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP4"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "ADD"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP3"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP3"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP1"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "ISZERO"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "JUMPI"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP1"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "LT"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "JUMPI"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP1"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP4"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SLOAD"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DIV"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "MUL"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP4"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "MSTORE"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SWAP2"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "ADD"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SWAP2"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "JUMP"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "JUMPDEST"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP3"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "ADD"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SWAP2"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SWAP1"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "MSTORE"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "KECCAK256"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SWAP1"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "JUMPDEST"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP2"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SLOAD"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP2"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "MSTORE"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SWAP1"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "ADD"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SWAP1"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "ADD"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP1"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP4"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "GT"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "JUMPI"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP3"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SWAP1"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SUB"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "AND"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP3"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "ADD"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "SWAP2"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "JUMPDEST"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "POP"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "POP"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "POP"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "POP"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "POP"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "DUP2"
										},
										{
											"begin": 11228,
											"end": 11249,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "JUMPDEST"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DUP1"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "SLOAD"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DUP1"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "MLOAD"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DUP6"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "AND"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "ISZERO"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "ADD"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "SWAP1"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "SWAP5"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "AND"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "SWAP4"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "SWAP1"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "SWAP4"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DIV"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DUP2"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "ADD"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DUP5"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "SWAP1"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DIV"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DUP5"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "MUL"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DUP3"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "ADD"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DUP5"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "ADD"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "SWAP1"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "SWAP3"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "MSTORE"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DUP2"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DUP2"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "MSTORE"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "SWAP3"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "SWAP2"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DUP4"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "ADD"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DUP3"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DUP3"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DUP1"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "ISZERO"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "JUMPI"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DUP1"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "LT"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "JUMPI"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DUP1"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DUP4"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "SLOAD"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DIV"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "MUL"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "DUP4"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "MSTORE"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "SWAP2"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "ADD"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "SWAP2"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 11253,
											"end": 11272,
											"name": "JUMP"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "SWAP2"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "DUP3"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "AND"
										},
										{
											"begin": 12762,
											"end": 12769,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "SWAP1"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "DUP2"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "MSTORE"
										},
										{
											"begin": 12784,
											"end": 12795,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "SWAP1"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "DUP2"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "MSTORE"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "DUP1"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "DUP4"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "KECCAK256"
										},
										{
											"begin": 12784,
											"end": 12811,
											"name": "SWAP4"
										},
										{
											"begin": 12784,
											"end": 12811,
											"name": "SWAP1"
										},
										{
											"begin": 12784,
											"end": 12811,
											"name": "SWAP5"
										},
										{
											"begin": 12784,
											"end": 12811,
											"name": "AND"
										},
										{
											"begin": 12784,
											"end": 12811,
											"name": "DUP3"
										},
										{
											"begin": 12784,
											"end": 12811,
											"name": "MSTORE"
										},
										{
											"begin": 12784,
											"end": 12811,
											"name": "SWAP2"
										},
										{
											"begin": 12784,
											"end": 12811,
											"name": "SWAP1"
										},
										{
											"begin": 12784,
											"end": 12811,
											"name": "SWAP2"
										},
										{
											"begin": 12784,
											"end": 12811,
											"name": "MSTORE"
										},
										{
											"begin": 12784,
											"end": 12811,
											"name": "KECCAK256"
										},
										{
											"begin": 12784,
											"end": 12811,
											"name": "SLOAD"
										},
										{
											"begin": 12784,
											"end": 12811,
											"name": "SWAP1"
										},
										{
											"begin": 12688,
											"end": 12816,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "JUMPDEST"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 9906,
											"end": 9916,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "JUMPDEST"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SWAP1"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "DUP2"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "AND"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "SWAP2"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "AND"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "EQ"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "JUMPI"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MLOAD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SUB"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "REVERT"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "JUMPDEST"
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 10646,
											"end": 10654,
											"name": "DUP2"
										},
										{
											"begin": 10627,
											"end": 10645,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "JUMPDEST"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "POP"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3595,
											"end": 3685,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 3595,
											"end": 3685,
											"name": "JUMPDEST"
										},
										{
											"begin": 3670,
											"end": 3680,
											"name": "CALLER"
										},
										{
											"begin": 3595,
											"end": 3685,
											"name": "SWAP1"
										},
										{
											"begin": 3595,
											"end": 3685,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18017,
											"end": 18331,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 18017,
											"end": 18331,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18106,
											"end": 18125,
											"name": "DUP4"
										},
										{
											"begin": 18106,
											"end": 18125,
											"name": "AND"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "JUMPI"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "DUP2"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "MSTORE"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "ADD"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "DUP1"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "DUP1"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "ADD"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "DUP3"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "DUP2"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "SUB"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "DUP3"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "MSTORE"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "DUP2"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "MSTORE"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "ADD"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "DUP1"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "PUSH data",
											"value": "A3B32387119999786B1EC9D1F53A7E79560C2E33F750B8A96C8E2D14ECB77F91"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "SWAP2"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "CODECOPY"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "ADD"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "SWAP2"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "POP"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "POP"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "MLOAD"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "DUP1"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "SWAP2"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "SUB"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "SWAP1"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "REVERT"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 18098,
											"end": 18166,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18180,
											"end": 18201,
											"name": "DUP3"
										},
										{
											"begin": 18180,
											"end": 18201,
											"name": "AND"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "JUMPI"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "DUP2"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "MSTORE"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "ADD"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "DUP1"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "DUP1"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "ADD"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "DUP3"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "DUP2"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "SUB"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "DUP3"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "MSTORE"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "DUP2"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "MSTORE"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "ADD"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "DUP1"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "PUSH data",
											"value": "B394F3B0695AA74F0153A7D294CED7383D6F167777FF906A2B400F4783AE435C"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "SWAP2"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "CODECOPY"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "ADD"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "SWAP2"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "MLOAD"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "DUP1"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "SWAP2"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "SUB"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "REVERT"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 18172,
											"end": 18240,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "DUP1"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "DUP5"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "AND"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "DUP2"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "DUP2"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "MSTORE"
										},
										{
											"begin": 18247,
											"end": 18258,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "SWAP1"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "DUP2"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "MSTORE"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "DUP1"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "DUP4"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "KECCAK256"
										},
										{
											"begin": 18247,
											"end": 18274,
											"name": "SWAP5"
										},
										{
											"begin": 18247,
											"end": 18274,
											"name": "DUP8"
										},
										{
											"begin": 18247,
											"end": 18274,
											"name": "AND"
										},
										{
											"begin": 18247,
											"end": 18274,
											"name": "DUP1"
										},
										{
											"begin": 18247,
											"end": 18274,
											"name": "DUP5"
										},
										{
											"begin": 18247,
											"end": 18274,
											"name": "MSTORE"
										},
										{
											"begin": 18247,
											"end": 18274,
											"name": "SWAP5"
										},
										{
											"begin": 18247,
											"end": 18274,
											"name": "DUP3"
										},
										{
											"begin": 18247,
											"end": 18274,
											"name": "MSTORE"
										},
										{
											"begin": 18247,
											"end": 18274,
											"name": "SWAP2"
										},
										{
											"begin": 18247,
											"end": 18274,
											"name": "DUP3"
										},
										{
											"begin": 18247,
											"end": 18274,
											"name": "SWAP1"
										},
										{
											"begin": 18247,
											"end": 18274,
											"name": "KECCAK256"
										},
										{
											"begin": 18247,
											"end": 18283,
											"name": "DUP6"
										},
										{
											"begin": 18247,
											"end": 18283,
											"name": "SWAP1"
										},
										{
											"begin": 18247,
											"end": 18283,
											"name": "SSTORE"
										},
										{
											"begin": 18294,
											"end": 18326,
											"name": "DUP2"
										},
										{
											"begin": 18294,
											"end": 18326,
											"name": "MLOAD"
										},
										{
											"begin": 18294,
											"end": 18326,
											"name": "DUP6"
										},
										{
											"begin": 18294,
											"end": 18326,
											"name": "DUP2"
										},
										{
											"begin": 18294,
											"end": 18326,
											"name": "MSTORE"
										},
										{
											"begin": 18294,
											"end": 18326,
											"name": "SWAP2"
										},
										{
											"begin": 18294,
											"end": 18326,
											"name": "MLOAD"
										},
										{
											"begin": 18294,
											"end": 18326,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 18294,
											"end": 18326,
											"name": "SWAP3"
										},
										{
											"begin": 18294,
											"end": 18326,
											"name": "DUP2"
										},
										{
											"begin": 18294,
											"end": 18326,
											"name": "SWAP1"
										},
										{
											"begin": 18294,
											"end": 18326,
											"name": "SUB"
										},
										{
											"begin": 18294,
											"end": 18326,
											"name": "SWAP1"
										},
										{
											"begin": 18294,
											"end": 18326,
											"name": "SWAP2"
										},
										{
											"begin": 18294,
											"end": 18326,
											"name": "ADD"
										},
										{
											"begin": 18294,
											"end": 18326,
											"name": "SWAP1"
										},
										{
											"begin": 18294,
											"end": 18326,
											"name": "LOG3"
										},
										{
											"begin": 18017,
											"end": 18331,
											"name": "POP"
										},
										{
											"begin": 18017,
											"end": 18331,
											"name": "POP"
										},
										{
											"begin": 18017,
											"end": 18331,
											"name": "POP"
										},
										{
											"begin": 18017,
											"end": 18331,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16013,
											"end": 16455,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 16013,
											"end": 16455,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16106,
											"end": 16126,
											"name": "DUP4"
										},
										{
											"begin": 16106,
											"end": 16126,
											"name": "AND"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "JUMPI"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "DUP2"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "MSTORE"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "ADD"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "DUP1"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "DUP1"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "ADD"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "DUP3"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "DUP2"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "SUB"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "DUP3"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "MSTORE"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "DUP2"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "MSTORE"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "ADD"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "DUP1"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "PUSH data",
											"value": "BCFDE3765840CB5EEF6A25D234002120AE0868902AC4A3023B23315EF6E74553"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "SWAP2"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "CODECOPY"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "ADD"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "SWAP2"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "POP"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "POP"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "MLOAD"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "DUP1"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "SWAP2"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "SUB"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "SWAP1"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "REVERT"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 16098,
											"end": 16168,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16182,
											"end": 16205,
											"name": "DUP3"
										},
										{
											"begin": 16182,
											"end": 16205,
											"name": "AND"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "JUMPI"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "DUP2"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "MSTORE"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "ADD"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "DUP1"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "DUP1"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "ADD"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "DUP3"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "DUP2"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "SUB"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "DUP3"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "MSTORE"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "DUP2"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "MSTORE"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "ADD"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "DUP1"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "PUSH data",
											"value": "64EA97AE7457D513C64CCDC791D74B8E0DBE043FFC2A1BDBA9184138AC3B5AD4"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "SWAP2"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "CODECOPY"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "ADD"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "SWAP2"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "POP"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "POP"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "MLOAD"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "DUP1"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "SWAP2"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "SUB"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "SWAP1"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "REVERT"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 16174,
											"end": 16245,
											"name": "JUMPDEST"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 16294,
											"end": 16300,
											"name": "DUP2"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "MLOAD"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "DUP1"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "ADD"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "MSTORE"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "DUP1"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "DUP2"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "MSTORE"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "ADD"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "PUSH data",
											"value": "8B3B2F7361CA6CCAA55146D6345D4981F11BFA0015185087BFCF610E5BC8489A"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "SWAP2"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16272,
											"end": 16289,
											"name": "DUP7"
										},
										{
											"begin": 16272,
											"end": 16289,
											"name": "AND"
										},
										{
											"begin": 16272,
											"end": 16289,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16272,
											"end": 16289,
											"name": "SWAP1"
										},
										{
											"begin": 16272,
											"end": 16289,
											"name": "DUP2"
										},
										{
											"begin": 16272,
											"end": 16289,
											"name": "MSTORE"
										},
										{
											"begin": 16272,
											"end": 16281,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16272,
											"end": 16289,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16272,
											"end": 16289,
											"name": "MSTORE"
										},
										{
											"begin": 16272,
											"end": 16289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16272,
											"end": 16289,
											"name": "SWAP1"
										},
										{
											"begin": 16272,
											"end": 16289,
											"name": "KECCAK256"
										},
										{
											"begin": 16272,
											"end": 16289,
											"name": "SLOAD"
										},
										{
											"begin": 16272,
											"end": 16289,
											"name": "SWAP2"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "SWAP1"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16272,
											"end": 16293,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "AND"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16252,
											"end": 16269,
											"name": "DUP1"
										},
										{
											"begin": 16252,
											"end": 16269,
											"name": "DUP6"
										},
										{
											"begin": 16252,
											"end": 16269,
											"name": "AND"
										},
										{
											"begin": 16252,
											"end": 16269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16252,
											"end": 16269,
											"name": "SWAP1"
										},
										{
											"begin": 16252,
											"end": 16269,
											"name": "DUP2"
										},
										{
											"begin": 16252,
											"end": 16269,
											"name": "MSTORE"
										},
										{
											"begin": 16252,
											"end": 16261,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16252,
											"end": 16269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16252,
											"end": 16269,
											"name": "MSTORE"
										},
										{
											"begin": 16252,
											"end": 16269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16252,
											"end": 16269,
											"name": "DUP1"
										},
										{
											"begin": 16252,
											"end": 16269,
											"name": "DUP3"
										},
										{
											"begin": 16252,
											"end": 16269,
											"name": "KECCAK256"
										},
										{
											"begin": 16252,
											"end": 16343,
											"name": "SWAP4"
										},
										{
											"begin": 16252,
											"end": 16343,
											"name": "SWAP1"
										},
										{
											"begin": 16252,
											"end": 16343,
											"name": "SWAP4"
										},
										{
											"begin": 16252,
											"end": 16343,
											"name": "SSTORE"
										},
										{
											"begin": 16372,
											"end": 16392,
											"name": "SWAP1"
										},
										{
											"begin": 16372,
											"end": 16392,
											"name": "DUP5"
										},
										{
											"begin": 16372,
											"end": 16392,
											"name": "AND"
										},
										{
											"begin": 16372,
											"end": 16392,
											"name": "DUP2"
										},
										{
											"begin": 16372,
											"end": 16392,
											"name": "MSTORE"
										},
										{
											"begin": 16372,
											"end": 16392,
											"name": "KECCAK256"
										},
										{
											"begin": 16372,
											"end": 16392,
											"name": "SLOAD"
										},
										{
											"begin": 16372,
											"end": 16404,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 16372,
											"end": 16404,
											"name": "SWAP1"
										},
										{
											"begin": 16397,
											"end": 16403,
											"name": "DUP3"
										},
										{
											"begin": 16372,
											"end": 16404,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16372,
											"end": 16396,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 16372,
											"end": 16404,
											"name": "AND"
										},
										{
											"begin": 16372,
											"end": 16404,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16372,
											"end": 16404,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 16372,
											"end": 16404,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "DUP1"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "DUP5"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "AND"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "DUP2"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "DUP2"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "MSTORE"
										},
										{
											"begin": 16349,
											"end": 16358,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "SWAP1"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "DUP2"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "MSTORE"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "SWAP2"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "DUP3"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "SWAP1"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "KECCAK256"
										},
										{
											"begin": 16349,
											"end": 16404,
											"name": "SWAP5"
										},
										{
											"begin": 16349,
											"end": 16404,
											"name": "SWAP1"
										},
										{
											"begin": 16349,
											"end": 16404,
											"name": "SWAP5"
										},
										{
											"begin": 16349,
											"end": 16404,
											"name": "SSTORE"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "DUP1"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "MLOAD"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "DUP6"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "DUP2"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "MSTORE"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "SWAP1"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "MLOAD"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "SWAP2"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "SWAP4"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "SWAP3"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "DUP8"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "AND"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "SWAP3"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "SWAP3"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "SWAP2"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "DUP3"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "SWAP1"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "SUB"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "ADD"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "SWAP1"
										},
										{
											"begin": 16415,
											"end": 16450,
											"name": "LOG3"
										},
										{
											"begin": 16013,
											"end": 16455,
											"name": "POP"
										},
										{
											"begin": 16013,
											"end": 16455,
											"name": "POP"
										},
										{
											"begin": 16013,
											"end": 16455,
											"name": "POP"
										},
										{
											"begin": 16013,
											"end": 16455,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5492,
											"end": 5665,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 5492,
											"end": 5665,
											"name": "JUMPDEST"
										},
										{
											"begin": 5578,
											"end": 5585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5609,
											"end": 5621,
											"name": "DUP2"
										},
										{
											"begin": 5601,
											"end": 5607,
											"name": "DUP5"
										},
										{
											"begin": 5601,
											"end": 5607,
											"name": "DUP5"
										},
										{
											"begin": 5601,
											"end": 5607,
											"name": "GT"
										},
										{
											"begin": 5601,
											"end": 5607,
											"name": "ISZERO"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "JUMPI"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MSTORE"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ADD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ADD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP3"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SUB"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP3"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MSTORE"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP4"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MLOAD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MSTORE"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ADD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MLOAD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ADD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP4"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ADD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "AND"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ISZERO"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "JUMPI"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP3"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SUB"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MLOAD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP4"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SUB"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "EXP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SUB"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "NOT"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "AND"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MSTORE"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ADD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "JUMPDEST"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP3"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MLOAD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SUB"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "REVERT"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5640,
											"end": 5645,
											"name": "SWAP1"
										},
										{
											"begin": 5640,
											"end": 5645,
											"name": "SUB"
										},
										{
											"begin": 5640,
											"end": 5645,
											"name": "SWAP1"
										},
										{
											"begin": 5492,
											"end": 5665,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4694,
											"end": 4856,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 4694,
											"end": 4856,
											"name": "JUMPDEST"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4784,
											"name": "DUP3"
										},
										{
											"begin": 4779,
											"end": 4784,
											"name": "DUP3"
										},
										{
											"begin": 4779,
											"end": 4784,
											"name": "ADD"
										},
										{
											"begin": 4798,
											"end": 4804,
											"name": "DUP4"
										},
										{
											"begin": 4798,
											"end": 4804,
											"name": "DUP2"
										},
										{
											"begin": 4798,
											"end": 4804,
											"name": "LT"
										},
										{
											"begin": 4798,
											"end": 4804,
											"name": "ISZERO"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "JUMPI"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP1"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP2"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "MSTORE"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP3"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "ADD"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "MSTORE"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP3"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "ADD"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "MSTORE"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP3"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "ADD"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "MSTORE"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "SWAP1"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "MLOAD"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "SWAP1"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP2"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "SWAP1"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "SUB"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "ADD"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "SWAP1"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "REVERT"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "JUMPDEST"
										},
										{
											"begin": 4850,
											"end": 4851,
											"name": "SWAP4"
										},
										{
											"begin": 4694,
											"end": 4856,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4694,
											"end": 4856,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17296,
											"end": 17620,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 17296,
											"end": 17620,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17367,
											"end": 17388,
											"name": "DUP3"
										},
										{
											"begin": 17367,
											"end": 17388,
											"name": "AND"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "JUMPI"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "DUP2"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "MSTORE"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "ADD"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "DUP1"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "DUP1"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "ADD"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "DUP3"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "DUP2"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "SUB"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "DUP3"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "MSTORE"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "DUP2"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "MSTORE"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "ADD"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "DUP1"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "PUSH data",
											"value": "F70D9D9C27D4D18165BE1F03A1F1A5D7BB474AFA8CBE6AF412B168937E2F3A84"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "SWAP2"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "CODECOPY"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "ADD"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "SWAP2"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "POP"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "POP"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "MLOAD"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "DUP1"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "SWAP2"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "SUB"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "SWAP1"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "REVERT"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 17359,
											"end": 17426,
											"name": "JUMPDEST"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 17477,
											"end": 17483,
											"name": "DUP2"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "MLOAD"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "DUP1"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "ADD"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "MSTORE"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "DUP1"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "DUP2"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "MSTORE"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "ADD"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "PUSH data",
											"value": "DA8C24CA01DF06FE437C579662B59C535302EAAE2B6940A10883325ABBCD45CA"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "SWAP2"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17454,
											"end": 17472,
											"name": "DUP6"
										},
										{
											"begin": 17454,
											"end": 17472,
											"name": "AND"
										},
										{
											"begin": 17454,
											"end": 17472,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17454,
											"end": 17472,
											"name": "SWAP1"
										},
										{
											"begin": 17454,
											"end": 17472,
											"name": "DUP2"
										},
										{
											"begin": 17454,
											"end": 17472,
											"name": "MSTORE"
										},
										{
											"begin": 17454,
											"end": 17463,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17454,
											"end": 17472,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17454,
											"end": 17472,
											"name": "MSTORE"
										},
										{
											"begin": 17454,
											"end": 17472,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17454,
											"end": 17472,
											"name": "SWAP1"
										},
										{
											"begin": 17454,
											"end": 17472,
											"name": "KECCAK256"
										},
										{
											"begin": 17454,
											"end": 17472,
											"name": "SLOAD"
										},
										{
											"begin": 17454,
											"end": 17472,
											"name": "SWAP2"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "SWAP1"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17454,
											"end": 17476,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "AND"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 17454,
											"end": 17522,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "DUP4"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "AND"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "SWAP1"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "DUP2"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "MSTORE"
										},
										{
											"begin": 17433,
											"end": 17442,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "MSTORE"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "SWAP1"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "KECCAK256"
										},
										{
											"begin": 17433,
											"end": 17522,
											"name": "SSTORE"
										},
										{
											"begin": 17543,
											"end": 17555,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 17543,
											"end": 17555,
											"name": "SLOAD"
										},
										{
											"begin": 17543,
											"end": 17567,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 17543,
											"end": 17567,
											"name": "SWAP1"
										},
										{
											"begin": 17560,
											"end": 17566,
											"name": "DUP3"
										},
										{
											"begin": 17543,
											"end": 17567,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17543,
											"end": 17559,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 17543,
											"end": 17567,
											"name": "AND"
										},
										{
											"begin": 17543,
											"end": 17567,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17543,
											"end": 17567,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 17543,
											"end": 17567,
											"name": "JUMPDEST"
										},
										{
											"begin": 17528,
											"end": 17540,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 17528,
											"end": 17567,
											"name": "SSTORE"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "DUP1"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "MLOAD"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "DUP3"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "DUP2"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "MSTORE"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "SWAP1"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "MLOAD"
										},
										{
											"begin": 17604,
											"end": 17605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17604,
											"end": 17605,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "DUP6"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "AND"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "SWAP2"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "SWAP2"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "DUP2"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "SWAP1"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "SUB"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "ADD"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "SWAP1"
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "LOG3"
										},
										{
											"begin": 17296,
											"end": 17620,
											"name": "POP"
										},
										{
											"begin": 17296,
											"end": 17620,
											"name": "POP"
										},
										{
											"begin": 17296,
											"end": 17620,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10753,
											"end": 10964,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 10753,
											"end": 10964,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10822,
											"end": 10844,
											"name": "DUP2"
										},
										{
											"begin": 10822,
											"end": 10844,
											"name": "AND"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "JUMPI"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP2"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "MSTORE"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "ADD"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP1"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP1"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "ADD"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP3"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP2"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "SUB"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP3"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "MSTORE"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP2"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "MSTORE"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "ADD"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP1"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "SWAP2"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "CODECOPY"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "ADD"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "SWAP2"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "POP"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "POP"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "MLOAD"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP1"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "SWAP2"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "SUB"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "SWAP1"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "REVERT"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "JUMPDEST"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "DUP1"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "SLOAD"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "DUP1"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "DUP6"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "AND"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "SWAP4"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "SWAP3"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "AND"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "SWAP2"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "SWAP2"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "LOG3"
										},
										{
											"begin": 10942,
											"end": 10948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "DUP1"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SWAP3"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SWAP1"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SWAP3"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "AND"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SWAP2"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SWAP1"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SWAP2"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "OR"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SWAP1"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SSTORE"
										},
										{
											"begin": 10753,
											"end": 10964,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5100,
											"end": 5228,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 5100,
											"end": 5228,
											"name": "JUMPDEST"
										},
										{
											"begin": 5158,
											"end": 5165,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5180,
											"end": 5223,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 5184,
											"end": 5185,
											"name": "DUP4"
										},
										{
											"begin": 5187,
											"end": 5188,
											"name": "DUP4"
										},
										{
											"begin": 5180,
											"end": 5223,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5180,
											"end": 5223,
											"name": "MLOAD"
										},
										{
											"begin": 5180,
											"end": 5223,
											"name": "DUP1"
										},
										{
											"begin": 5180,
											"end": 5223,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5180,
											"end": 5223,
											"name": "ADD"
										},
										{
											"begin": 5180,
											"end": 5223,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5180,
											"end": 5223,
											"name": "MSTORE"
										},
										{
											"begin": 5180,
											"end": 5223,
											"name": "DUP1"
										},
										{
											"begin": 5180,
											"end": 5223,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 5180,
											"end": 5223,
											"name": "DUP2"
										},
										{
											"begin": 5180,
											"end": 5223,
											"name": "MSTORE"
										},
										{
											"begin": 5180,
											"end": 5223,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5223,
											"name": "ADD"
										},
										{
											"begin": 5180,
											"end": 5223,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 5180,
											"end": 5223,
											"name": "DUP2"
										},
										{
											"begin": 5180,
											"end": 5223,
											"name": "MSTORE"
										},
										{
											"begin": 5180,
											"end": 5223,
											"name": "POP"
										},
										{
											"begin": 5180,
											"end": 5183,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 5180,
											"end": 5223,
											"name": "JUMP",
											"value": "[in]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"3D234848B1165C1D44EE096354D96B78EE9AA8EF9F4DD8FB59ED7216DBDA102F": "4f524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"64EA97AE7457D513C64CCDC791D74B8E0DBE043FFC2A1BDBA9184138AC3B5AD4": "4f524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"87D6DB954C608985F03F8B1FEF85ED6DCB004F13FA99EB0D65CFD43383C12A83": "4f524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"8B3B2F7361CA6CCAA55146D6345D4981F11BFA0015185087BFCF610E5BC8489A": "4f524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"A3B32387119999786B1EC9D1F53A7E79560C2E33F750B8A96C8E2D14ECB77F91": "4f524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"B394F3B0695AA74F0153A7D294CED7383D6F167777FF906A2B400F4783AE435C": "4f524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"BCFDE3765840CB5EEF6A25D234002120AE0868902AC4A3023B23315EF6E74553": "4f524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"DA8C24CA01DF06FE437C579662B59C535302EAAE2B6940A10883325ABBCD45CA": "4f524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"F70D9D9C27D4D18165BE1F03A1F1A5D7BB474AFA8CBE6AF412B168937E2F3A84": "4f524332303a206275726e2066726f6d20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"_decimals()": "32424aa3",
							"_name()": "d28d8852",
							"_symbol()": "b09f1266",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {ORC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {ORC20-approve}.   * Requirements:   * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {ORC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {ORC20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {ORC20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {ORC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {ORC20-transfer}.   * Requirements:   * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {ORC20-transferFrom}.   * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ORC20};   * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ONFA.sol\":\"ONFA\"},\"evmVersion\":\"homestead\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ONFA.sol\":{\"keccak256\":\"0x6c1499ad1b3cc0af237fe15641893e5559bd2a807d8e791e5a99dd67d3507e4e\",\"urls\":[\"bzz-raw://6d517cf36d2870b22a0e9d81b7030ee574e4606175609c50fdf61a4b182b6b6d\",\"dweb:/ipfs/QmZ5S7os9V8p9A5cENnb2WxGdRii8p2QKM2AzpZP3vKyRo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/ONFA.sol:ONFA",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 417,
								"contract": "contracts/ONFA.sol:ONFA",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 423,
								"contract": "contracts/ONFA.sol:ONFA",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 425,
								"contract": "contracts/ONFA.sol:ONFA",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 427,
								"contract": "contracts/ONFA.sol:ONFA",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 429,
								"contract": "contracts/ONFA.sol:ONFA",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 431,
								"contract": "contracts/ONFA.sol:ONFA",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ONFA.sol\":\"Ownable\"},\"evmVersion\":\"homestead\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ONFA.sol\":{\"keccak256\":\"0x6c1499ad1b3cc0af237fe15641893e5559bd2a807d8e791e5a99dd67d3507e4e\",\"urls\":[\"bzz-raw://6d517cf36d2870b22a0e9d81b7030ee574e4606175609c50fdf61a4b182b6b6d\",\"dweb:/ipfs/QmZ5S7os9V8p9A5cENnb2WxGdRii8p2QKM2AzpZP3vKyRo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/ONFA.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/ONFA.sol\":4469:8763  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ONFA.sol\":4469:8763  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820519a2d1f5e53fd0c6a01a7761184f5fd3e1b3dfafb2443edc5d547d8c13cefcb64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820519a2d1f5e53fd0c6a01a7761184f5fd3e1b3dfafb2443edc5d547d8c13cefcb64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 MLOAD SWAP11 0x2D 0x1F 0x5E MSTORE8 REVERT 0xC PUSH11 0x1A7761184F5FD3E1B3DFA 0xFB 0x24 NUMBER 0xED 0xC5 0xD5 SELFBALANCE 0xD8 0xC1 EXTCODECOPY 0xEF 0xCB PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "4469:4294:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820519a2d1f5e53fd0c6a01a7761184f5fd3e1b3dfafb2443edc5d547d8c13cefcb64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 MLOAD SWAP11 0x2D 0x1F 0x5E MSTORE8 REVERT 0xC PUSH11 0x1A7761184F5FD3E1B3DFA 0xFB 0x24 NUMBER 0xED 0xC5 0xD5 SELFBALANCE 0xD8 0xC1 EXTCODECOPY 0xEF 0xCB PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "4469:4294:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4469,
									"end": 8763,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4469,
									"end": 8763,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820519a2d1f5e53fd0c6a01a7761184f5fd3e1b3dfafb2443edc5d547d8c13cefcb64736f6c63430005100032",
									".code": [
										{
											"begin": 4469,
											"end": 8763,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "ADDRESS"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "EQ"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "MSTORE"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "DUP1"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ONFA.sol\":\"SafeMath\"},\"evmVersion\":\"homestead\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ONFA.sol\":{\"keccak256\":\"0x6c1499ad1b3cc0af237fe15641893e5559bd2a807d8e791e5a99dd67d3507e4e\",\"urls\":[\"bzz-raw://6d517cf36d2870b22a0e9d81b7030ee574e4606175609c50fdf61a4b182b6b6d\",\"dweb:/ipfs/QmZ5S7os9V8p9A5cENnb2WxGdRii8p2QKM2AzpZP3vKyRo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/ONFA.sol": {
				"ast": {
					"absolutePath": "contracts/ONFA.sol",
					"exportedSymbols": {
						"Context": [
							113
						],
						"IORC20": [
							88
						],
						"ONFA": [
							858
						],
						"Ownable": [
							404
						],
						"SafeMath": [
							298
						]
					},
					"id": 859,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IORC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "131:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "157:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "156:9:0"
									},
									"scope": 88,
									"src": "111:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "237:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "263:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 8,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "263:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "262:7:0"
									},
									"scope": 88,
									"src": "220:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "337:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "363:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "363:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "362:15:0"
									},
									"scope": 88,
									"src": "322:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "465:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "465:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "464:15:0"
									},
									"scope": 88,
									"src": "426:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "552:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "578:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "577:9:0"
									},
									"scope": 88,
									"src": "535:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "681:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "680:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "721:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "720:9:0"
									},
									"scope": 88,
									"src": "662:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "952:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "971:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "951:35:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1005:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1005:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1004:6:0"
									},
									"scope": 88,
									"src": "934:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1289:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1305:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1288:33:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1345:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1344:9:0"
									},
									"scope": 88,
									"src": "1270:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * Emits an {Approval} event.",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1994:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2011:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1993:33:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2045:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 57,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2045:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2044:6:0"
									},
									"scope": 88,
									"src": "1977:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2360:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2360:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2376:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2376:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2395:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2359:51:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2429:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2429:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2428:6:0"
									},
									"scope": 88,
									"src": "2338:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n   * Note that `value` may be zero.",
									"id": 79,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2605:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2627:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2647:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2604:57:0"
									},
									"src": "2590:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 87,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2826:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2849:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2874:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2825:63:0"
									},
									"src": "2811:78:0"
								}
							],
							"scope": 859,
							"src": "25:2866:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3588:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3576:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3588:0:0"
									},
									"scope": 113,
									"src": "3564:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3657:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "3670:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3670:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 96,
												"id": 99,
												"nodeType": "Return",
												"src": "3663:17:0"
											}
										]
									},
									"documentation": null,
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3614:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3640:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3640:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3639:17:0"
									},
									"scope": 113,
									"src": "3595:90:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "3746:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 889,
													"src": "3752:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$113",
														"typeString": "contract Context"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "3752:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "3888:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3888:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 105,
												"id": 110,
												"nodeType": "Return",
												"src": "3881:15:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3706:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3732:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3732:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3731:14:0"
									},
									"scope": 113,
									"src": "3689:212:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 859,
							"src": "3393:510:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "4761:95:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "4767:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4767:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4779:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "4783:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4779:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4767:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 129,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "4798:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "4803:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4806:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															876,
															877
														],
														"referencedDeclaration": 877,
														"src": "4790:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4790:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "4850:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 136,
												"nodeType": "Return",
												"src": "4843:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `+` operator.\n   * Requirements:\n- Addition cannot overflow.",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4707:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4718:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4706:22:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4752:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4752:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4751:9:0"
									},
									"scope": 298,
									"src": "4694:162:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "5167:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5184:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5187:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5190:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 147,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154,
															181
														],
														"referencedDeclaration": 181,
														"src": "5180:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5180:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 146,
												"id": 152,
												"nodeType": "Return",
												"src": "5173:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5113:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5124:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5112:22:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5158:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5157:9:0"
									},
									"scope": 298,
									"src": "5100:128:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5587:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "5601:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5606:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5601:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 169,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5609:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															876,
															877
														],
														"referencedDeclaration": 877,
														"src": "5593:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5593:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "5593:29:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5628:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5628:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5640:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5644:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5640:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5628:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "5659:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "5652:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5505:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5516:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5516:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5527:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5527:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5504:50:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5578:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5577:9:0"
									},
									"scope": 298,
									"src": "5492:173:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "5952:352:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6168:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6173:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6168:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 196,
												"nodeType": "IfStatement",
												"src": "6164:35:0",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "6176:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6191:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 189,
															"id": 194,
															"nodeType": "Return",
															"src": "6184:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 214,
														"src": "6205:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6205:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6217:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6221:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6217:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6205:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "6236:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 205,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "6240:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6236:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 207,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "6245:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6236:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6248:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															876,
															877
														],
														"referencedDeclaration": 877,
														"src": "6228:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6228:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6228:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 212,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 198,
													"src": "6298:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 213,
												"nodeType": "Return",
												"src": "6291:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `*` operator.\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5898:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5909:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5897:22:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5943:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5942:9:0"
									},
									"scope": 298,
									"src": "5885:419:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "6802:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6819:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "6822:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6825:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 224,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															231,
															258
														],
														"referencedDeclaration": 258,
														"src": "6815:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6815:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 229,
												"nodeType": "Return",
												"src": "6808:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6748:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6759:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6747:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6793:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6792:9:0"
									},
									"scope": 298,
									"src": "6735:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "7405:221:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "7481:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7485:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7481:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7488:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															876,
															877
														],
														"referencedDeclaration": 877,
														"src": "7473:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7473:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7473:28:0"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "7507:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7507:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "7519:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "7523:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7519:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7507:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 255,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7620:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 256,
												"nodeType": "Return",
												"src": "7613:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7323:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7334:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7345:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7345:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7322:50:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7395:9:0"
									},
									"scope": 298,
									"src": "7310:316:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "8113:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8130:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 269,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8133:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8136:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 267,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															297
														],
														"referencedDeclaration": 297,
														"src": "8126:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8126:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 272,
												"nodeType": "Return",
												"src": "8119:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8059:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8070:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8070:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8058:22:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8104:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8103:9:0"
									},
									"scope": 298,
									"src": "8046:122:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "8703:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "8717:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8722:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8717:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 289,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "8725:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															876,
															877
														],
														"referencedDeclaration": 877,
														"src": "8709:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8709:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "8709:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8751:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "8755:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8751:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 295,
												"nodeType": "Return",
												"src": "8744:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8621:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8632:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8643:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8643:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8620:50:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8694:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8693:9:0"
									},
									"scope": 298,
									"src": "8608:153:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 859,
							"src": "4469:4294:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 299,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "9280:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "9280:7:0"
								}
							],
							"contractDependencies": [
								113
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 404,
							"linearizedBaseContracts": [
								404,
								113
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 302,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 404,
									"src": "9292:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 301,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9292:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 308,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9346:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9346:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9377:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9345:57:0"
									},
									"src": "9319:84:0"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "9521:121:0",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 327,
														"src": "9527:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 311,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9527:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 313,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "9547:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9547:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9527:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "9565:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "9574:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9565:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "9565:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9623:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9615:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9615:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 324,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "9627:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 320,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "9594:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9594:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "EmitStatement",
												"src": "9589:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9509:2:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9521:0:0"
									},
									"scope": 404,
									"src": "9497:145:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "9757:24:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 333,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "9770:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "9763:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9724:2:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9748:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9748:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9747:9:0"
									},
									"scope": 404,
									"src": "9710:71:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "9882:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "9896:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 340,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "9906:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9906:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9896:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9920:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															876,
															877
														],
														"referencedDeclaration": 877,
														"src": "9888:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9888:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "9888:67:0"
											},
											{
												"id": 346,
												"nodeType": "PlaceholderStatement",
												"src": "9961:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 348,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9879:2:0"
									},
									"src": "9861:106:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "10339:81:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 354,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10371:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10387:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10379:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10379:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 353,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10350:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10350:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "EmitStatement",
												"src": "10345:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 360,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10396:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10413:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10405:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10405:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "10396:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "10396:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 351,
											"modifierName": {
												"argumentTypes": null,
												"id": 350,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10329:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10329:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10319:2:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10339:0:0"
									},
									"scope": 404,
									"src": "10293:127:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "10621:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 375,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "10646:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 374,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "10627:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10627:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "10627:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 372,
											"modifierName": {
												"argumentTypes": null,
												"id": 371,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10611:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10611:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "10586:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10586:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10585:18:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10621:0:0"
									},
									"scope": 404,
									"src": "10559:101:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "10808:156:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 385,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "10822:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10842:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10834:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10834:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10822:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10846:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															876,
															877
														],
														"referencedDeclaration": 877,
														"src": "10814:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10814:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "10814:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10919:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "10927:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 393,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10898:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10898:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "EmitStatement",
												"src": "10893:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 398,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10942:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 399,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "10951:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10942:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "10942:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "10781:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10780:18:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10808:0:0"
									},
									"scope": 404,
									"src": "10753:211:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 859,
							"src": "9260:1706:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 405,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "10985:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "10985:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 407,
										"name": "IORC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "10994:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IORC20_$88",
											"typeString": "contract IORC20"
										}
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "10994:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 409,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 404,
										"src": "11002:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$404",
											"typeString": "contract Ownable"
										}
									},
									"id": 410,
									"nodeType": "InheritanceSpecifier",
									"src": "11002:7:0"
								}
							],
							"contractDependencies": [
								88,
								113,
								404
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 858,
							"linearizedBaseContracts": [
								858,
								404,
								88,
								113
							],
							"name": "ONFA",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 413,
									"libraryName": {
										"contractScope": null,
										"id": 411,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "11020:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$298",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11014:27:0",
									"typeName": {
										"id": 412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11033:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 417,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 858,
									"src": "11045:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 416,
										"keyType": {
											"id": 414,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11054:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11045:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 415,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11065:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 858,
									"src": "11096:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 422,
										"keyType": {
											"id": 418,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11105:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11096:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 421,
											"keyType": {
												"id": 419,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11125:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11116:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11136:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 858,
									"src": "11170:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11170:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 858,
									"src": "11202:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 426,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11202:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 429,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 858,
									"src": "11228:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 428,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11228:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 431,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 858,
									"src": "11253:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 430,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11253:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "11298:204:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 434,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "11304:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "4f4e4641",
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11312:6:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_860fb2f049c15eb1ba6c2f62027edbc7777473b20563445a1bcbde104c458a10",
															"typeString": "literal_string \"ONFA\""
														},
														"value": "ONFA"
													},
													"src": "11304:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "11304:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 438,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "11324:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "4f4654",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11334:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_644eeade5861c097e456f18b1f5228a78324a831ab87fa7044bfd2c1c1184fc4",
															"typeString": "literal_string \"OFT\""
														},
														"value": "OFT"
													},
													"src": "11324:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "11324:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 442,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "11345:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11357:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "11345:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "11345:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 446,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11365:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_200000000000000000000000000_by_1",
															"typeString": "int_const 200000000000000000000000000"
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "323030303030303030",
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11380:9:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_200000000_by_1",
																"typeString": "int_const 200000000"
															},
															"value": "200000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11391:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3138",
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11395:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "11391:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "11380:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200000000000000000000000000_by_1",
															"typeString": "int_const 200000000000000000000000000"
														}
													},
													"src": "11365:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "11365:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 454,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "11403:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 457,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 455,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "11413:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11413:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11403:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 458,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11427:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11403:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "11403:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11468:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11460:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11460:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 465,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "11472:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11472:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 467,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "11484:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 461,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "11451:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11451:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "EmitStatement",
												"src": "11446:51:0"
											}
										]
									},
									"documentation": null,
									"id": 471,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11288:2:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11298:0:0"
									},
									"scope": 858,
									"src": "11277:225:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "11605:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 476,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "11618:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 475,
												"id": 478,
												"nodeType": "Return",
												"src": "11611:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token owner.",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11570:2:0"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "11596:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11595:9:0"
									},
									"scope": 858,
									"src": "11553:77:0",
									"stateMutability": "view",
									"superFunction": 26,
									"visibility": "external"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "11734:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 485,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "11747:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 484,
												"id": 486,
												"nodeType": "Return",
												"src": "11740:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11701:2:0"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "11727:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 482,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11727:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11726:7:0"
									},
									"scope": 858,
									"src": "11684:77:0",
									"stateMutability": "view",
									"superFunction": 11,
									"visibility": "external"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "11869:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 493,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "11882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 492,
												"id": 494,
												"nodeType": "Return",
												"src": "11875:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11828:2:0"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "11854:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11854:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11853:15:0"
									},
									"scope": 858,
									"src": "11813:81:0",
									"stateMutability": "view",
									"superFunction": 16,
									"visibility": "external"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "11996:23:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 501,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 431,
													"src": "12009:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 500,
												"id": 502,
												"nodeType": "Return",
												"src": "12002:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11955:2:0"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "11981:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 498,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11981:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11980:15:0"
									},
									"scope": 858,
									"src": "11942:77:0",
									"stateMutability": "view",
									"superFunction": 21,
									"visibility": "external"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "12125:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 509,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "12138:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 508,
												"id": 510,
												"nodeType": "Return",
												"src": "12131:19:0"
											}
										]
									},
									"documentation": "@dev See {ORC20-totalSupply}.",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12090:2:0"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "12116:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12116:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12115:9:0"
									},
									"scope": 858,
									"src": "12070:85:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "12272:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 519,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "12285:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 521,
													"indexExpression": {
														"argumentTypes": null,
														"id": 520,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "12295:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12285:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 518,
												"id": 522,
												"nodeType": "Return",
												"src": "12278:25:0"
											}
										]
									},
									"documentation": "@dev See {ORC20-balanceOf}.",
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "12223:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12222:17:0"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "12263:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12262:9:0"
									},
									"scope": 858,
									"src": "12204:104:0",
									"stateMutability": "view",
									"superFunction": 33,
									"visibility": "external"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "12569:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 534,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "12585:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12585:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 536,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "12599:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 537,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "12610:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 533,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "12575:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12575:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "12575:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12630:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 532,
												"id": 541,
												"nodeType": "Return",
												"src": "12623:11:0"
											}
										]
									},
									"documentation": "@dev See {ORC20-transfer}.\n   * Requirements:\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "12510:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12510:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "12529:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12509:35:0"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "12563:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12563:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12562:6:0"
									},
									"scope": 858,
									"src": "12492:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 42,
									"visibility": "external"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "12771:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 552,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "12784:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 554,
														"indexExpression": {
															"argumentTypes": null,
															"id": 553,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "12796:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12784:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 556,
													"indexExpression": {
														"argumentTypes": null,
														"id": 555,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "12803:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12784:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 551,
												"id": 557,
												"nodeType": "Return",
												"src": "12777:34:0"
											}
										]
									},
									"documentation": "@dev See {ORC20-allowance}.",
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "12707:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12707:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "12722:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12706:32:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "12762:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12761:9:0"
									},
									"scope": 858,
									"src": "12688:128:0",
									"stateMutability": "view",
									"superFunction": 51,
									"visibility": "external"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "13011:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 569,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13026:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13026:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 571,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "13040:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 572,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "13049:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 568,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "13017:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13017:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "13017:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13069:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 567,
												"id": 576,
												"nodeType": "Return",
												"src": "13062:11:0"
											}
										]
									},
									"documentation": "@dev See {ORC20-approve}.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "12954:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "12971:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12953:33:0"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "13005:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13005:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13004:6:0"
									},
									"scope": 858,
									"src": "12937:141:0",
									"stateMutability": "nonpayable",
									"superFunction": 60,
									"visibility": "external"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "13606:191:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 590,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "13622:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 591,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "13630:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 592,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "13641:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 589,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "13612:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13612:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "13612:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 596,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "13663:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 597,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13671:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13671:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 606,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "13723:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "4f524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13731:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_3d234848b1165c1d44ee096354d96b78ee9aa8ef9f4dd8fb59ed7216dbda102f",
																		"typeString": "literal_string \"ORC20: transfer amount exceeds allowance\""
																	},
																	"value": "ORC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_3d234848b1165c1d44ee096354d96b78ee9aa8ef9f4dd8fb59ed7216dbda102f",
																		"typeString": "literal_string \"ORC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 599,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "13685:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 601,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 600,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "13697:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13685:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 604,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 602,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "13705:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13705:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13685:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "13685:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13685:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 595,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "13654:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13654:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "13654:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13788:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 588,
												"id": 612,
												"nodeType": "Return",
												"src": "13781:11:0"
											}
										]
									},
									"documentation": "@dev See {ORC20-transferFrom}.\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {ORC20};\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13531:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13547:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13547:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13566:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13530:51:0"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13600:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 586,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13600:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13599:6:0"
									},
									"scope": 858,
									"src": "13509:288:0",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "14251:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 624,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14266:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14266:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 626,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "14280:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 634,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "14328:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 627,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14289:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 630,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 628,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "14301:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14301:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14289:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 632,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 631,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "14315:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14289:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 138,
																"src": "14289:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14289:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 623,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "14257:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14257:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "14257:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14353:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 622,
												"id": 639,
												"nodeType": "Return",
												"src": "14346:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {ORC20-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "14192:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14192:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "14209:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14191:37:0"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "14245:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 620,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14245:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14244:6:0"
									},
									"scope": 858,
									"src": "14165:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "14909:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 651,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14924:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14924:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 653,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "14938:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 661,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "14986:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "4f524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15003:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_87d6db954c608985f03f8b1fef85ed6dcb004f13fa99eb0d65cfd43383c12a83",
																		"typeString": "literal_string \"ORC20: decreased allowance below zero\""
																	},
																	"value": "ORC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_87d6db954c608985f03f8b1fef85ed6dcb004f13fa99eb0d65cfd43383c12a83",
																		"typeString": "literal_string \"ORC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 654,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14947:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 657,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 655,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "14959:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14959:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14947:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 659,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 658,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "14973:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14947:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "14947:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14947:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 650,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "14915:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14915:129:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "14915:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15057:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 649,
												"id": 667,
												"nodeType": "Return",
												"src": "15050:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {ORC20-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "14845:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "14862:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14844:42:0"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "14903:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14903:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14902:6:0"
									},
									"scope": 858,
									"src": "14818:248:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "15514:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 677,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15526:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15526:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 679,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "15540:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 676,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "15520:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15520:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "15520:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15560:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 675,
												"id": 683,
												"nodeType": "Return",
												"src": "15553:11:0"
											}
										]
									},
									"documentation": "@dev Burn `amount` tokens and decreasing the total supply.",
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "15476:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15476:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15475:16:0"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "15508:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 673,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15508:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15507:6:0"
									},
									"scope": 858,
									"src": "15462:107:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "16092:363:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 695,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "16106:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16124:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16116:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16116:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16106:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16128:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bcfde3765840cb5eef6a25d234002120ae0868902ac4a3023b23315ef6e74553",
																"typeString": "literal_string \"ORC20: transfer from the zero address\""
															},
															"value": "ORC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bcfde3765840cb5eef6a25d234002120ae0868902ac4a3023b23315ef6e74553",
																"typeString": "literal_string \"ORC20: transfer from the zero address\""
															}
														],
														"id": 694,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															876,
															877
														],
														"referencedDeclaration": 877,
														"src": "16098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16098:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "16098:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 704,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "16182:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16203:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16195:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16195:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16182:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16207:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64ea97ae7457d513c64ccdc791d74b8e0dbe043ffc2a1bdba9184138ac3b5ad4",
																"typeString": "literal_string \"ORC20: transfer to the zero address\""
															},
															"value": "ORC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64ea97ae7457d513c64ccdc791d74b8e0dbe043ffc2a1bdba9184138ac3b5ad4",
																"typeString": "literal_string \"ORC20: transfer to the zero address\""
															}
														],
														"id": 703,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															876,
															877
														],
														"referencedDeclaration": 877,
														"src": "16174:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16174:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "16174:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 712,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16252:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 714,
														"indexExpression": {
															"argumentTypes": null,
															"id": 713,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "16262:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16252:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 719,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "16294:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "4f524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16302:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_8b3b2f7361ca6ccaa55146d6345d4981f11bfa0015185087bfcf610e5bc8489a",
																	"typeString": "literal_string \"ORC20: transfer amount exceeds balance\""
																},
																"value": "ORC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_8b3b2f7361ca6ccaa55146d6345d4981f11bfa0015185087bfcf610e5bc8489a",
																	"typeString": "literal_string \"ORC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 715,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16272:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 717,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 716,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "16282:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16272:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "16272:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16272:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16252:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "16252:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 724,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16349:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 726,
														"indexExpression": {
															"argumentTypes": null,
															"id": 725,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "16359:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16349:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 731,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "16397:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 727,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16372:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 729,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 728,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "16382:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16372:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16372:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16372:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16349:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "16349:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 736,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "16424:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 737,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "16432:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 738,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "16443:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 735,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "16415:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16415:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "EmitStatement",
												"src": "16410:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n   * Emits a {Transfer} event.\n   * Requirements:\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "16032:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16032:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "16048:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "16067:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16067:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16031:51:0"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16092:0:0"
									},
									"scope": 858,
									"src": "16013:442:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "17353:267:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 750,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "17367:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17386:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17378:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17378:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17367:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17390:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f70d9d9c27d4d18165be1f03a1f1a5d7bb474afa8cbe6af412b168937e2f3a84",
																"typeString": "literal_string \"ORC20: burn from the zero address\""
															},
															"value": "ORC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f70d9d9c27d4d18165be1f03a1f1a5d7bb474afa8cbe6af412b168937e2f3a84",
																"typeString": "literal_string \"ORC20: burn from the zero address\""
															}
														],
														"id": 749,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															876,
															877
														],
														"referencedDeclaration": 877,
														"src": "17359:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17359:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "17359:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 758,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "17433:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 760,
														"indexExpression": {
															"argumentTypes": null,
															"id": 759,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "17443:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17433:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 765,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "17477:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "4f524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17485:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_da8c24ca01df06fe437c579662b59c535302eaae2b6940a10883325abbcd45ca",
																	"typeString": "literal_string \"ORC20: burn amount exceeds balance\""
																},
																"value": "ORC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_da8c24ca01df06fe437c579662b59c535302eaae2b6940a10883325abbcd45ca",
																	"typeString": "literal_string \"ORC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 761,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "17454:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 763,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 762,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "17464:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17454:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "17454:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17454:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17433:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "17433:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 770,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "17528:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 773,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "17560:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 771,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "17543:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "17543:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17543:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17528:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "17528:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 778,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "17587:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17604:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17596:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17596:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 782,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "17608:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 777,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "17578:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17578:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "EmitStatement",
												"src": "17573:42:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n   * Emits a {Transfer} event with `to` set to the zero address.\n   * Requirements\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "17311:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17311:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "17328:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17310:33:0"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17353:0:0"
									},
									"scope": 858,
									"src": "17296:324:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "18092:239:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 796,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "18106:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18123:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18115:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18115:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18106:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18127:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a3b32387119999786b1ec9d1f53a7e79560c2e33f750b8a96c8e2d14ecb77f91",
																"typeString": "literal_string \"ORC20: approve from the zero address\""
															},
															"value": "ORC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a3b32387119999786b1ec9d1f53a7e79560c2e33f750b8a96c8e2d14ecb77f91",
																"typeString": "literal_string \"ORC20: approve from the zero address\""
															}
														],
														"id": 795,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															876,
															877
														],
														"referencedDeclaration": 877,
														"src": "18098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18098:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "18098:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 805,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "18180:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18199:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18191:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18191:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18180:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18203:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b394f3b0695aa74f0153a7d294ced7383d6f167777ff906a2b400f4783ae435c",
																"typeString": "literal_string \"ORC20: approve to the zero address\""
															},
															"value": "ORC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b394f3b0695aa74f0153a7d294ced7383d6f167777ff906a2b400f4783ae435c",
																"typeString": "literal_string \"ORC20: approve to the zero address\""
															}
														],
														"id": 804,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															876,
															877
														],
														"referencedDeclaration": 877,
														"src": "18172:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18172:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "18172:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 813,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "18247:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 816,
															"indexExpression": {
																"argumentTypes": null,
																"id": 814,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "18259:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18247:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 817,
														"indexExpression": {
															"argumentTypes": null,
															"id": 815,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "18266:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18247:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 818,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "18277:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18247:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "18247:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 822,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "18303:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 823,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "18310:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 824,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "18319:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 821,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "18294:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18294:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "EmitStatement",
												"src": "18289:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n   * Emits an {Approval} event.\n   * Requirements:\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "18035:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "18050:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18050:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "18067:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18067:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18034:48:0"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18092:0:0"
									},
									"scope": 858,
									"src": "18017:314:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "18556:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 836,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "18568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 837,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "18577:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 835,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "18562:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18562:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "18562:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 841,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "18599:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 842,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "18608:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18608:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 851,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "18661:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "4f524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18669:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_8714c3bb8c27a12cd31221763188144bb4c8108764345174a0a3e32c9a9eac07",
																		"typeString": "literal_string \"ORC20: burn amount exceeds allowance\""
																	},
																	"value": "ORC20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_8714c3bb8c27a12cd31221763188144bb4c8108764345174a0a3e32c9a9eac07",
																		"typeString": "literal_string \"ORC20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 844,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "18622:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 846,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 845,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 830,
																			"src": "18634:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18622:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 849,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 847,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "18643:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18643:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18622:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "18622:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18622:86:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 840,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "18590:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18590:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "18590:119:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n   * See {_burn} and {_approve}.",
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "18514:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "18531:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18513:33:0"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18556:0:0"
									},
									"scope": 858,
									"src": "18495:219:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 859,
							"src": "10968:7748:0"
						}
					],
					"src": "0:18716:0"
				},
				"id": 0
			}
		}
	}
}